(this["webpackJsonp@amzn/amazon-glue-frontend-asset-server"]=this["webpackJsonp@amzn/amazon-glue-frontend-asset-server"]||[]).push([[28],{2684:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var o=a(3),n=a(0),i=a(874),r=a(76),l=a(309),s="glue.amazonaws.com",c=function(e){return"string"===typeof(null===e||void 0===e?void 0:e.Service)?e.Service===s:!!Array.isArray(null===e||void 0===e?void 0:e.Service)&&(null===e||void 0===e?void 0:e.Service.includes(s))},d=function(e){var t=e.AssumeRolePolicyDocument;return!!t&&JSON.parse(decodeURIComponent(t)).Statement.map((function(e){return e.Principal})).some(c)},u=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=Object(i.a)(["listRoles"],(function(e){var t=e.pageParam,a=void 0===t?void 0:t;return r.l.listRoles({MaxItems:1e3,Marker:a}).promise()}),{getNextPageParam:function(e){return e.Marker}}),a=Object(l.a)(t,"Roles"),s=Object(n.useMemo)((function(){var t,o=a;return e&&(o=null===a||void 0===a?void 0:a.filter(d)),null===(t=o)||void 0===t?void 0:t.map((function(e){return{id:e.Arn,label:e.RoleName,description:e.Description||"No description available."}}))}),[a,e]);return Object(o.a)({roles:s||[],loading:t.isLoading,refresh:t.refetch},t)}},2734:function(e,t,a){"use strict";a.d(t,"c",(function(){return r})),a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return s}));var o=a(8),n=a(2746),i=a(2750),r=([].concat(Object(o.a)(n.a),Object(o.a)(i.a),Object(o.a)([])),function(e){return n.a.includes(e)}),l=function(e){return i.a.includes(e)},s=function(e){return!1}},2746:function(e,t,a){"use strict";a.d(t,"a",(function(){return r})),a.d(t,"b",(function(){return l})),a.d(t,"c",(function(){return s}));var o=a(14),n=a(757),i=a(2804),r=["visual-join-csv"],l={"visual-join-csv":JSON.stringify(i)},s=[{key:"<REGION>",replacement:o.c},{key:"<TEMPORARY_DIRECTORY>",replacement:n.g}]},2750:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"c",(function(){return d})),a.d(t,"b",(function(){return u}));var o=a(2805),n=a(2806),i=a(2807),r={language:"python",engine:"glueray"},l={language:"python",engine:"glueetl"},s={language:"python",engine:"glueetl"},c=["notebook-ray","notebook-spark-pandas","notebook-spark-sql"],d={"notebook-ray":JSON.stringify(o),"notebook-spark-pandas":JSON.stringify(n),"notebook-spark-sql":JSON.stringify(i)},u={"notebook-ray":r,"notebook-spark-pandas":l,"notebook-spark-sql":s}},2751:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));var o=a(3),n=a(757),i=a(30),r=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return function(e){return t.reduce((function(e,t){return t(e)}),e)}}((function(e){var t=function(){if(i.a.isEnabled("feature-glue-4"))return"4.0";return i.a.isEnabled("feature-spark-3")||!i.a.isEnabled("feature-deprecate-glue-2")?"3.0":"2.0"}();return Object(o.a)(Object(o.a)({},e),{},{version:t})}),(function(e){var t=i.a.isEnabled("feature-enable-autotune")&&["2.0","3.0"].some((function(t){return t===e.version}));return Object(o.a)(Object(o.a)({},e),{},{etlAutoTuning:t})}))(Object(o.a)(Object(o.a)({command:"glueetl",description:"",role:"",scriptName:"",version:"3.0",language:"python-3",scriptLocation:"".concat(n.e,"/scripts/"),temporaryDirectory:"".concat(n.e,"/temporary/"),timeout:2880,maxConcurrentRuns:1,workerType:"G.1X",numberOfWorkers:n.d,maxRetries:0,metrics:!0,observabilityMetrics:!!i.a.isEnabled("feature-monitoring-resource-usage"),security:"none",bookmark:"job-bookmark-disable",logging:!0},{spark:!0,sparkConfiguration:"standard"}),{},{sparkPath:"".concat(n.e,"/sparkHistoryLogs/"),serverEncryption:!1,glueHiveMetastore:!0,etlAutoScaling:!1,etlAutoTuning:!1,etlAutoTuningJobRules:void 0,jobParameters:[],tags:[],connectionsList:[],jobMode:"VISUAL_MODE"}))},2782:function(e,t,a){"use strict";a.d(t,"b",(function(){return G})),a.d(t,"a",(function(){return B})),a.d(t,"c",(function(){return U}));var o,n=a(8),i=a(2),r=a(5),l=a(3),s=a(2589),c=a(46),d=a(0),u=a(137),p=a(757),b=a(30),f=a(206),m=b.a.isEnabled("feature-glue-4")?"4.0":"3.0",h=["# AWS Glue Studio Notebook\n","##### You are now running a AWS Glue Studio notebook; To start using your notebook you need to start an AWS Glue Interactive Session.\n"],g=['#### Optional: Run this cell to see available notebook commands ("magics").\n'],j=["\n%help\n  ".trim()],y=["####  Run this cell to set up and start your interactive session.\n"],v=["\n%idle_timeout 2880\n%glue_version ".concat(m,"\n%worker_type G.1X\n%number_of_workers 5\n\nimport sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\n  \nsc = SparkContext.getOrCreate()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\n  ").trim()],O=["\n%idle_timeout 2880\n%number_of_workers 5\n  ".trim()],x=["#### Example: Create a DynamicFrame from a table in the AWS Glue Data Catalog and display its schema\n"],k=["\ndyf = glueContext.create_dynamic_frame.from_catalog(database='database_name', table_name='table_name')\ndyf.printSchema()\n  ".trim()],_=["#### Example: Convert the DynamicFrame to a Spark DataFrame and display a sample of the data\n"],w=["\ndf = dyf.toDF()\ndf.show()\n  ".trim()],S=["#### Example: Visualize data with matplotlib\n"],C=["\nimport matplotlib.pyplot as plt\n\n# Set X-axis and Y-axis values\nx = [5, 2, 8, 4, 9]\ny = [10, 4, 8, 5, 2]\n  \n# Create a bar chart \nplt.bar(x, y)\n  \n# Show the plot\n%matplot plt\n  ".trim()],M=["#### Example: Write the data in the DynamicFrame to a location in Amazon S3 and a table for it in the AWS Glue Data Catalog\n"],T=['\ns3output = glueContext.getSink(\n  path="s3://bucket_name/folder_name",\n  connection_type="s3",\n  updateBehavior="UPDATE_IN_DATABASE",\n  partitionKeys=[],\n  compression="snappy",\n  enableUpdateCatalog=True,\n  transformation_ctx="s3output",\n)\ns3output.setCatalogInfo(\n  catalogDatabase="demo", catalogTableName="populations"\n)\ns3output.setFormat("glueparquet")\ns3output.writeFrame(DyF)\n  '.trim()],A=a(74),E=["additional_python_modules"],L=["streaming","etl"],P=Object(l.a)(Object(l.a)(Object(l.a)({number_of_workers:"numberOfWorkers",worker_type:"workerType",glue_version:"version",security_config:"security",extra_py_files:"pythonPath",extra_jars:"dependentPath",connections:"connectionsList",etl:"command",streaming:"command"},{role_arn:"role",description:"description",command:"command",script_location:"scriptLocation",script_name:"scriptName",timeout:"timeout",max_concurrent_runs:"maxConcurrentRuns",max_capacity:"maxCapacity",max_retries:"maxRetries",notify_delay_after:"delay",security_configuration:"security",tags:"tags"}),Object(u.h)(u.e)),{},(o={},Object(r.a)(o,A.a.SparkUIStandardPath,"spark"),Object(r.a)(o,"additional_python_modules","--additional-python-modules"),o)),R=function(e){return Object.entries(e).reduce((function(e,t){var a=Object(i.a)(t,2),o=a[0],n=a[1],s=n[n.length-1],c=P[o];return!c||void 0===s||E.includes(o)||L.includes(o)||e.jobConfigValues.push({key:c,value:s}),!c&&void 0!==s&&o.includes("--")&&(e.defaultArguments=Object(l.a)(Object(l.a)({},e.defaultArguments),{},Object(r.a)({},o,"".concat(s.toString())))),E.includes(o)&&(e.defaultArguments=Object(l.a)(Object(l.a)({},e.defaultArguments),{},Object(r.a)({},c,"".concat(s.toString())))),L.includes(o)&&e.jobConfigValues.push({key:c,value:"etl"===o?f.a.glueetl:f.a.gluestreaming}),e}),{jobConfigValues:[],defaultArguments:{}})},N=Object.keys(u.e).reduce((function(e,t){var a,o="".concat((null===(a=p.i[t])||void 0===a?void 0:a.toString())||"");return e[u.e[t]]=[o],e}),{}),D=R(N),V=D.jobConfigValues,F=D.defaultArguments,I=function(){var e=window.location.href.split("/"),t=e.indexOf("kernel")+1;return e[t]===f.a.glueray&&b.a.isEnabled("feature-manta")?f.a.glueray:f.a.glueetl},z=function(){return{cells:[{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:h},{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:g},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:j}].concat(Object(n.a)(I()===f.a.glueray?[{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:y},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:O}]:[{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:y},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:v},{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:x},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:k},{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:_},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:w},{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:S},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:C},{cell_type:"markdown",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:M},{cell_type:"code",execution_count:null,metadata:{trusted:!0,editable:!0},outputs:[],source:T}])),metadata:{kernelspec:{display_name:"Glue Interactive Sessions",language:"python"},language_info:{codemirror_mode:{name:"python",version:3},file_extension:".py",mimetype:"text/x-python",name:s.a.gluePySpark},orig_nbformat:4},nbformat:4,nbformat_minor:4}},G=function(e,t){if(e){var a="string"===typeof e?JSON.parse(e):e,o=[],r=a.cells,s={},c=function(e,t,a){if("code"===a.cell_type){var o="connections"!==e?t:null===t||void 0===t?void 0:t.replace(/\s/g,"").split(",");s[e]=Array.isArray(s[e])?[].concat(Object(n.a)(s[e]),[o]):[o]}};r.filter((function(e){return!!e.source})).forEach((function(e){var t="string"===typeof e.source?e.source:e.source.join(""),a=t.match(/^%%configure([\s\S]*)\}/gm)||[],n=Object(i.a)(a,1)[0],r=(null===n||void 0===n?void 0:n.split("%%configure"))||[],l=Object(i.a)(r,2)[1],s=null===l||void 0===l?void 0:l.trim();try{var d=JSON.parse(s);Object.entries(d).forEach((function(t){var a=Object(i.a)(t,2),o=a[0],n=a[1];c(o,n,e)}))}catch(b){}var u="%%sql";if(t.startsWith(u)){var p=t.replace("".concat(u,"\n"),"");t='spark.sql("""'.concat(p.trim(),'""").show()')}t.split("\n").forEach((function(t){var a=t.match(/^%(?!%)(.*)/g);if(a){var r=t.replace("%","").split(/ (.*)/),l=Object(i.a)(r,2),s=l[0],d=l[1];c(s,d,e)}e.metadata.hasOwnProperty("deletable")||a||n||"markdown"===e.cell_type||o.push(t)}))}));var d=Object(l.a)(Object(l.a)({},a),{},{cells:Object(n.a)(r)}),u=o.join("\n").split("\n"),p=u[u.length-1],b=[].concat(Object(n.a)(u),Object(n.a)("job.commit()"===p||[I(),t].includes(f.a.glueray)?[]:["job.commit()"])).join("\n"),m=R(s),h=m.jobConfigValues,g=m.defaultArguments;return{model:d,source:b,magicsMap:s,jobConfigValues:h,defaultArguments:g}}},B=G(z()),U=function(e){var t=Object(c.a)(),a=t.setFieldValue,o=t.values.jobConfig.command,r=Object(d.useState)(void 0===e?G(z()):e),s=Object(i.a)(r,2),p=s[0],b=s[1];return Object(d.useEffect)((function(){if(p){var e=p.model,t=p.source,o=p.jobConfigValues,i=void 0===o?[]:o,r=p.defaultArguments,s=void 0===r?{}:r;a("script",t),a("notebook",e),[].concat(Object(n.a)(V),Object(n.a)(i)).forEach((function(e){var t=e.key,o=e.value;return a("jobConfig.".concat(t.toString()),"true"===o||"false"===o?"true"===o:o)})),a("jobConfig.jobParameters",Object(u.f)(Object(l.a)(Object(l.a)({},F),s)))}}),[p,a]),{notebook:p,pushNotebookQuery:function(e){var t=e.model;b(G(t,o))}}}},2803:function(e,t,a){"use strict";a.d(t,"b",(function(){return u})),a.d(t,"c",(function(){return b})),a.d(t,"a",(function(){return f}));var o=a(5),n=a(3),i=a(2734),r=a(2746),l=a(2750),s=a(2751),c=a(757),d=a(2698),u={spark:!1},p=function(e){if(Object(i.c)(e))return Object(n.a)(Object(n.a)({},s.a),{},{jobMode:"VISUAL_MODE"});if(Object(i.a)(e)){var t=l.b[e];if("glueray"===t.engine)return Object(n.a)(Object(n.a)({},c.j),{},{jobMode:"NOTEBOOK_MODE"});if("glueetl"===t.engine)return Object(n.a)(Object(n.a)(Object(n.a)({},s.a),u),{},{jobMode:"NOTEBOOK_MODE"})}return{}},b=r.a.reduce((function(e,t){var a=function(e){var t=r.b[e],a=r.c.reduce((function(e,t){var a=t.key,o=t.replacement;return e.replaceAll(a,o)}),t);return Object(d.e)(a)}(t),i=p(t),l=Object(d.a)(a,Object(n.a)(Object(n.a)({},i),{},{name:"",role:""}));return Object(n.a)(Object(n.a)({},e),{},Object(o.a)({},t,{config:i,dag:l}))}),{}),f=l.a.reduce((function(e,t){return Object(n.a)(Object(n.a)({},e),{},Object(o.a)({},t,{config:p(t),script:(a=t,l.c[a])}));var a}),{})},2804:function(e){e.exports=JSON.parse('{"node-1685352206564":{"nodeId":"node-1685352206564","dataPreview":false,"previewAmount":0,"inputs":[],"name":"Plans","generatedNodeName":"Plans_node1685352206564","classification":"DataSource","type":"S3","isCatalog":false,"format":"csv","paths":["s3://aws-bigdata-blog/artifacts/telco-data-monetization-configs-<REGION>/data/tariff_plan_desc_20190501.csv.gz"],"compressionType":null,"exclusions":[],"groupFiles":null,"groupSize":null,"recurse":true,"maxBand":null,"maxFilesInBand":null,"additionalOptions":{"boundedSize":null,"boundedFiles":null,"enableSamplePath":false,"samplePath":"s3://aws-bigdata-blog/artifacts/telco-data-monetization-configs-<REGION>/data/tariff_plan_desc_20190501.csv.gz","boundedOption":null},"separator":",","escaper":"","quoteChar":"\\"","multiline":null,"withHeader":true,"writeHeader":null,"skipFirst":null,"optimizePerformance":false,"outputSchemas":[[{"key":"plan_id","fullPath":["plan_id"],"type":"string","glueStudioType":null,"children":null},{"key":"plan_desc","fullPath":["plan_desc"],"type":"string","glueStudioType":null,"children":null},{"key":"plan_price","fullPath":["plan_price"],"type":"string","glueStudioType":null,"children":null}]],"calculatedType":""},"node-1685352066932":{"nodeId":"node-1685352066932","dataPreview":false,"previewAmount":0,"inputs":[],"name":"Plan assignment","generatedNodeName":"Planassignment_node1685352066932","classification":"DataSource","type":"S3","isCatalog":false,"format":"csv","paths":["s3://aws-bigdata-blog/artifacts/telco-data-monetization-configs-<REGION>/data/customer_subscription_map_20190501.csv.gz"],"compressionType":null,"exclusions":[],"groupFiles":null,"groupSize":null,"recurse":true,"maxBand":null,"maxFilesInBand":null,"additionalOptions":{"boundedSize":null,"boundedFiles":null,"enableSamplePath":false,"samplePath":"s3://aws-bigdata-blog/artifacts/telco-data-monetization-configs-<REGION>/data/customer_subscription_map_20190501.csv.gz","boundedOption":null},"separator":",","escaper":"","quoteChar":"\\"","multiline":null,"withHeader":true,"writeHeader":null,"skipFirst":null,"optimizePerformance":false,"outputSchemas":[[{"key":"msisdn","fullPath":["msisdn"],"type":"string","glueStudioType":null,"children":null},{"key":"plan_id","fullPath":["plan_id"],"type":"string","glueStudioType":null,"children":null}]],"calculatedType":""},"node-1685352920969":{"nodeId":"node-1685352920969","dataPreview":false,"previewAmount":0,"inputs":["node-1685353487597"],"name":"Catalog","generatedNodeName":"Catalog_node1685352920969","classification":"DataSink","type":"S3","streamingBatchInterval":100,"format":"glueparquet","compression":"snappy","path":"<TEMPORARY_DIRECTORY>/example/subscriber_plans/","partitionKeys":[["plan_id"]],"schemaChangePolicy":{"enableUpdateCatalog":true,"updateBehavior":"UPDATE_IN_DATABASE","database":"default","table":"subscriber_plans"},"updateCatalogOptions":"schemaAndPartitions","calculatedType":""},"node-1685352536679":{"nodeId":"node-1685352536679","dataPreview":false,"previewAmount":0,"inputs":["node-1685352066932","node-1"],"name":"Join","generatedNodeName":"Join_node1685352536679","classification":"Transform","type":"Join","joinType":"equijoin","columns":[{"from":"node-1685352066932","keys":[["msisdn"]]},{"from":"node-1","keys":[["msisdn"]]}],"columnConditions":["="],"parentsValid":true,"calculatedType":""},"node-1685353487597":{"nodeId":"node-1685353487597","dataPreview":false,"previewAmount":0,"inputs":["node-1685353779136"],"name":"Change Schema","generatedNodeName":"ChangeSchema_node1685353487597","classification":"Transform","type":"ApplyMapping","mapping":[{"toKey":"plan_id","fromPath":["plan_id"],"toType":"bigint","fromType":"string","dropped":false,"children":null},{"toKey":"gender","fromPath":["gender"],"toType":"string","fromType":"string","dropped":false,"children":null},{"toKey":"birth_date","fromPath":["birth_date"],"toType":"string","fromType":"string","dropped":false,"children":null},{"toKey":"is_vip","fromPath":["is_vip"],"toType":"boolean","fromType":"string","dropped":false,"children":null},{"toKey":"plan_desc","fromPath":["plan_desc"],"toType":"string","fromType":"string","dropped":false,"children":null},{"toKey":"plan_price","fromPath":["plan_price"],"toType":"int","fromType":"string","dropped":false,"children":null}],"parentsValid":true,"calculatedType":""},"node-1":{"nodeId":"node-1","dataPreview":false,"previewAmount":0,"inputs":[],"name":"Subscribers","generatedNodeName":"Subscribers_node1","classification":"DataSource","type":"S3","isCatalog":false,"format":"csv","paths":["s3://aws-bigdata-blog/artifacts/telco-data-monetization-configs-<REGION>/data/crm_demographics_20190501.csv.gz"],"compressionType":null,"exclusions":[],"groupFiles":null,"groupSize":null,"recurse":true,"maxBand":null,"maxFilesInBand":null,"additionalOptions":{"boundedSize":null,"boundedFiles":null,"enableSamplePath":false,"samplePath":"s3://aws-bigdata-blog/artifacts/telco-data-monetization-configs-<REGION>/data/crm_demographics_20190501.csv.gz","boundedOption":null},"separator":",","escaper":"","quoteChar":"\\"","multiline":null,"withHeader":true,"writeHeader":null,"skipFirst":null,"optimizePerformance":false,"outputSchemas":[[{"key":"msisdn","fullPath":["msisdn"],"type":"string","glueStudioType":null,"children":null},{"key":"gender","fullPath":["gender"],"type":"string","glueStudioType":null,"children":null},{"key":"birth_date","fullPath":["birth_date"],"type":"string","glueStudioType":null,"children":null},{"key":"is_vip","fullPath":["is_vip"],"type":"string","glueStudioType":null,"children":null}]],"calculatedType":""},"node-1685352743084":{"nodeId":"node-1685352743084","dataPreview":false,"previewAmount":0,"inputs":["node-1685352536679","node-1685352206564"],"name":"Join","generatedNodeName":"Join_node1685352743084","classification":"Transform","type":"Join","joinType":"equijoin","columns":[{"from":"node-1685352536679","keys":[["plan_id"]]},{"from":"node-1685352206564","keys":[["plan_id"]]}],"columnConditions":["="],"parentsValid":true,"calculatedType":""},"node-1685353779136":{"nodeId":"node-1685353779136","dataPreview":false,"previewAmount":0,"inputs":["node-1685352743084"],"name":"Select Fields","generatedNodeName":"SelectFields_node1685353779136","classification":"Transform","type":"SelectFields","paths":[["plan_id"],["gender"],["birth_date"],["is_vip"],["plan_desc"],["plan_price"]],"parentsValid":true,"calculatedType":""}}')},2805:function(e){e.exports=JSON.parse('{"metadata":{"kernelspec":{"name":"glue_pyspark","display_name":"Glue PySpark","language":"python"},"language_info":{"name":"Python_Glue_Session","mimetype":"text/x-python","codemirror_mode":{"name":"python","version":3},"pygments_lexer":"python3","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"### This notebook shows examples of using Ray to explore and handle data\xb6\\nTo follow this example notebook, execute the cells in order.\\nThe keyboard shortcut to execute the current cell and jump to the following is: Shift+Enter.\\n\\nTo delete cells no longer needed (including this one), you can use the context menu or use the Escape key (to exit any cell you might be in) and then press the d key twice.  \\nYou can select multiple cells using Shift + Up/Down, to delete many quickly.\\n","metadata":{"editable":true,"trusted":true}},{"cell_type":"markdown","source":"#### Running the following cell will set up and start your interactive session.\\n","metadata":{"editable":true,"tags":[],"trusted":true}},{"cell_type":"code","source":"%idle_timeout 120\\n%number_of_workers 4\\n%glue_ray\\n\\nimport boto3\\nimport ray\\n\\n# Change log_to_driver to True to help troubleshoot or see more details\\nray.init(\'auto\', log_to_driver=False)","metadata":{"editable":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Define the Dataset, the data is not actually read until we use it\\n# Check the Ray documentation for a full list of operations: https://docs.ray.io/en/latest/data/api/dataset.html\\n#  or how to read other formats and inputs: https://docs.ray.io/en/latest/data/api/input_output.html\\nds = ray.data.read_parquet(\\"s3://amazon-reviews-pds/parquet/product_category=Video/\\").repartition(100)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"ds.schema()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Display a few rows to understand how the data looks like\\nds.show(4)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Find reviews with verified purchases and star rating at least of 4, in the lambda, df is a pandas DataFrame that handles the operation efficiently in batches\\nds_verified_4star = ds.map_batches(lambda df: df[(df[\\"star_rating\\"] >= 4) & (df[\\"verified_purchase\\"] == \'Y\')])","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Get the 5 products from the subdataset with most reviews and save it as a Python list variable (we know the data is small enough to fit in the driver memory)\\nmost_reviewed_list = ds_verified_4star.groupby(\\"product_title\\").count().sort(\\"count()\\", descending=True).limit(5).take()\\nprint(f\\"The most  reviewed: {most_reviewed_list[0]}\\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# In this example we are interested in the length rather than the full test, to investigate later if there is a correlation between that and the helpful_votes\\n# Add a derived column with the length of the review\\nds_verified_4star_len = ds_verified_4star.add_column(\\"review_len\\", lambda df: len(df[\\"review_body\\"]))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# By default this example will save using the glue temporary bucket, you can replace it for another of your choice\\noutput_bucket = f\\"aws-glue-temporary-{boto3.client(\'sts\').get_caller_identity()[\'Account\']}-{boto3.session.Session().region_name}\\"\\n\\n# Save only the columns we need into a CSV, the data is small enough that we can write to a single file, use repartition to 1 to do so\\ncol_list = [\\"review_id\\", \\"customer_id\\", \\"product_id\\", \\"product_title\\", \\"star_rating\\", \\"helpful_votes\\", \\"marketplace\\", \\"review_len\\"]\\noutput_dir = f\\"s3://{output_bucket}/examples/ds_verified_4star_len/\\"\\nds_verified_4star_len.select_columns(col_list).repartition(1).write_csv(output_dir)\\nprint(f\\"Generated a single csv file under: {output_dir}\\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Use pandas to calculate the correlation between numeric columns\\nds_verified_4star_len.to_pandas().corr()","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}')},2806:function(e){e.exports=JSON.parse('{"cells":[{"cell_type":"markdown","id":"8cb16da0","metadata":{},"source":["### This notebook shows examples of using Glue on Spark for users familiar with pandas\\n","To follow this example notebook, execute the cells in order.\\n","The keyboard shortcut to execute the current cell and jump to the following is: Shift+Enter.\\n","\\n","To delete cells no longer needed (including this one), you can use the context menu or use the Escape key (to exit any cell you might be in) and then press the d key twice. You can select multiple cells using Shift + Up/Down, to delete many quickly.\\n","\\n","This example assumes the configured role has permission to read/write on the default catalog database and the s3 glue temporary folder, otherwise update the code or the permissions accordingly."]},{"cell_type":"markdown","id":"dc7cacd1","metadata":{},"source":["####  Running the following cell will set up and start your interactive session."]},{"cell_type":"code","execution_count":null,"id":"a3fea417","metadata":{},"outputs":[],"source":["%idle_timeout 120\\n","%glue_version 4.0\\n","%worker_type G.1X\\n","%number_of_workers 2\\n","\\n","import boto3\\n","import sys\\n","from awsglue.dynamicframe import DynamicFrame\\n","from awsglue.transforms import *\\n","from awsglue.utils import getResolvedOptions\\n","from pyspark.context import SparkContext\\n","from pyspark.sql.functions import *\\n","from awsglue.context import GlueContext\\n","from awsglue.job import Job\\n","  \\n","sc = SparkContext.getOrCreate()\\n","glueContext = GlueContext(sc)\\n","spark = glueContext.spark_session\\n","job = Job(glueContext)"]},{"cell_type":"code","execution_count":null,"id":"7a4db5b0","metadata":{},"outputs":[],"source":["# Optimize the data movement from pandas to Spark DataFrame and back\\n","spark.conf.set(\\"spark.sql.execution.arrow.pyspark.enabled\\", \\"true\\")\\n","\\n","# You can define a distributed Spark DataFrame, to read the data in a distributed way and be able to process large data\\n","# Here it takes a bit of time because we ask it to infer schema, in practice could just let it set everything as string\\n","# and handle the schema manually\\n","sdf = spark.read.csv(\\"s3://awsglue-datasets/examples/medicare/Medicare_Hospital_Provider.csv\\", \\n","                     header=True, inferSchema=True)"]},{"cell_type":"code","execution_count":null,"id":"7f867e92","metadata":{},"outputs":[],"source":["# The schema inference considered the dollar amounts as string due to the $ symbol\\n","# Also in the csv there are some header with extra spaces, we\'ll deal with that later\\n","sdf.printSchema()"]},{"cell_type":"code","execution_count":null,"id":"473bf9ac","metadata":{},"outputs":[],"source":["# The last 3 columns are dollar amounts, let\'s parse them into Decimal numbers for calculations\\n","last_3cols = sdf.columns[-3:]\\n","# These transformations are just defined here, until we extract the data Spark won\'t do the work (lazy execution)\\n","for col_name in last_3cols:\\n","    # Note: normally for monies it\'s better to use decimal but pandas doesn\'t support it\\n","    sdf = sdf.withColumn(col_name, regexp_replace(sdf[col_name], \'\\\\$\', \'\').cast(\'double\'))\\n","\\n","# The zip code is not really a number\\n","sdf = sdf.withColumn(\'Provider Zip Code\', sdf[\'Provider Zip Code\'].cast(\'string\'))"]},{"cell_type":"code","execution_count":null,"id":"68372c4f","metadata":{},"outputs":[],"source":["# Check the parsing is working fine\\n","sdf.show(n=10)"]},{"cell_type":"code","execution_count":null,"id":"150b2e81","metadata":{},"outputs":[],"source":["# Let\'s say you are only interested in California\\n","sdf_ca = sdf.filter(\'`Provider State` == \\"CA\\"\')\\n","\\n","# Now that we have narrowed down the data, it\'s small enough that we can convert into a native pandas DataFrame\\n","# Unlike sdf which reads data distributed and when needed, this pdf uses the driver memory to store the data\\n","# so is faster for smaller data as long as it fits\\n","pdf_ca = sdf_ca.toPandas()\\n","\\n","# The column names in the csv have extra spaces, in pandas we can trim that easily\\n","pdf_ca.columns = [c.strip() for c in pdf_ca.columns]"]},{"cell_type":"code","execution_count":null,"id":"4d69ff44","metadata":{},"outputs":[],"source":["# Check the pandas schema\\n","pdf_ca.dtypes"]},{"cell_type":"code","execution_count":null,"id":"42882f97","metadata":{"scrolled":false},"outputs":[],"source":["# Explore the statistics of the numeric columns\\n","import pandas as pd\\n","import numpy as np\\n","pd.set_option(\'display.max_columns\', 5)\\n","pd.set_option(\'max_colwidth\', 30)\\n","pdf_ca.describe()"]},{"cell_type":"code","execution_count":null,"id":"d0310bfc","metadata":{},"outputs":[],"source":["# Plot a histogram on the notebook directly from pandas\\n","import matplotlib.pyplot as plt\\n","plt.figure()\\n","plt.title(\\"Histogram of average Medicare payments\\")\\n","plt.xlabel(\\"Average payment in dollars\\")\\n","histogram = pdf_ca[\'Average Medicare Payments\'].plot.hist(bins=12, alpha=0.5)\\n","%matplot plt"]},{"cell_type":"markdown","id":"fcb425ef","metadata":{},"source":["If you have more experience with the pandas APIs would rather use that instead of Spark DataFrame  \\n","But notice that while we use native pandas, only the driver was doing work and the rest of the cluster is not used   \\n","That\'s why we set the minimum size: *%number_of_workers 2*  \\n","\\n","On Glue 4.0, you can get both distributed computed and the pandas syntax by using the \\"pandas on Spark\\" API, it\'s not yet 100% compatible but should work for most cases"]},{"cell_type":"code","execution_count":null,"id":"a74e182e","metadata":{},"outputs":[],"source":["# The following cells will only work on Glue 4.0\\n","# psdf is a pandas on Spark DataFrame, uses the pandas API but the data and processing is distributed\\n","# this means it has higher latency but also can scale beyond a single node to handler larger data\\n","psdf = sdf.pandas_api()\\n","psdf.columns = [c.strip() for c in psdf.columns]\\n","# Statistics on the full dataset\\n","psdf.describe()"]},{"cell_type":"code","execution_count":null,"id":"fc32263a","metadata":{},"outputs":[],"source":["# Operate the data in a distributed way but using pandas syntax\\n","relevant_psdf = psdf[(psdf[\'Total Discharges\'] > 100) & (psdf[\'Average Medicare Payments\'] > 10000)]\\n","relevant_psdf.groupby([\\"Provider State\\", \\"Provider Id\\"])[\\"Average Medicare Payments\\"].max()"]},{"cell_type":"markdown","id":"78801bf9","metadata":{},"source":["Note that in the previous cell the output is not equivalent than the same on native pandas, which displays the results grouped by the first column.   \\n","Also running a sort before the groupby wouldn\'t work the same way, in this case the data is distributed so it\'s unsorted again when doing the groupby. "]},{"cell_type":"code","execution_count":null,"id":"a264ce60","metadata":{},"outputs":[],"source":["# Convert back to Spark DataFrame if you want leverage the data saving features (for instance creating a catalog table)\\n","# https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrameWriter.html\\n","relevant_sdf = relevant_psdf.to_spark()\\n","relevant_sdf.show()\\n","\\n","# Or go a step further and convert to DynamicFrame to use its sinks and features\\n","# https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-crawler-pyspark-extensions-dynamic-frame-writer.html\\n","relevant_dynf = DynamicFrame.fromDF(relevant_sdf, glueContext, \\"\\")"]}],"metadata":{"kernelspec":{"display_name":"Glue PySpark","language":"python","name":"glue_pyspark"},"language_info":{"codemirror_mode":{"name":"python","version":3},"file_extension":".py","mimetype":"text/x-python","name":"Python_Glue_Session","pygments_lexer":"python3"}},"nbformat":4,"nbformat_minor":5}')},2807:function(e){e.exports=JSON.parse('{"cells":[{"cell_type":"markdown","id":"c887bb54","metadata":{},"source":["### This notebook shows examples of using SQL to explore and handle data\\n","To follow this example notebook, execute the cells in order.  \\n","The keyboard shortcut to execute the current cell and jump to the following is: Shift+Enter.\\n","\\n","To delete cells no longer needed (including this one), you can use the context menu or use the Escape key (to exit any cell you might be in) and then press the d key twice. You can select multiple cells using Shift + Up/Down, to delete many quickly.  \\n","\\n","This example assumes the configured role has permission to read/write on the default catalog database and the s3 glue temporary folder, otherwise update the code or the permissions accordingly."]},{"cell_type":"markdown","id":"72061504","metadata":{},"source":["####  Running the following cell will set up and start your interactive session."]},{"cell_type":"code","execution_count":null,"id":"c0bc868c","metadata":{"scrolled":true},"outputs":[],"source":["%idle_timeout 120\\n","%glue_version 3.0\\n","%worker_type G.1X\\n","%number_of_workers 3\\n","\\n","import boto3\\n","import sys\\n","from awsglue.transforms import *\\n","from awsglue.utils import getResolvedOptions\\n","from pyspark.context import SparkContext\\n","from pyspark.sql.functions import *\\n","from awsglue.context import GlueContext\\n","from awsglue.job import Job\\n","  \\n","sc = SparkContext.getOrCreate()\\n","glueContext = GlueContext(sc)\\n","spark = glueContext.spark_session\\n","job = Job(glueContext)"]},{"cell_type":"code","execution_count":null,"id":"41aa72ee","metadata":{"scrolled":true},"outputs":[],"source":["%%sql\\n","-- This is a SQL cell running against the account Glue catalog in the same region\\n","-- One query per cell\\n","show databases"]},{"cell_type":"code","execution_count":null,"id":"977ec91c","metadata":{"scrolled":true},"outputs":[],"source":["%%sql\\n","-- You can use ANSI SQL syntax to explore the catalog and run queries that print the results\\n","-- You can even run DDL to make changes, such as ALTER TABLE\\n","-- If your database or table has special characters, you can escape the name with a backtick `\\n","-- for instance: SELECT * FROM `mydb`.`mytable` LIMIT 10\\n","show tables in default"]},{"cell_type":"code","execution_count":null,"id":"9a78e418","metadata":{"scrolled":true},"outputs":[],"source":["# This is a Pyspark cell (which is the default)\\n","# In the previous cell, tables with more than 20 characters in the name would be truncated\\n","# or if you have more than 20 tables, some are not displayed\\n","# Here we do the same but using directly the API to have more control:\\n","spark.sql(\\"show tables in default\\").show(n=30, truncate=False)"]},{"cell_type":"code","execution_count":null,"id":"38bd4ad1","metadata":{"scrolled":true},"outputs":[],"source":["# If you data doesn\'t have a table in the catalog, you can use a temporary view to use SQL\\n","# Here we read all the CSV files under the indicated s3 path\\n","medicareDF = spark.read.csv(\\"s3://awsglue-datasets/examples/medicare/\\", header=True)\\n","# If there data has a reasonable size (like in this case), we can cache in memory/disk (depending on cluster size) \\n","# so after the first query, the following no longer have to go to read and parse from s3\\n","medicareDF.cache()\\n","# Instead of using the DataFrame API, you can register it as a view for SQL usage like this:\\n","medicareDF.registerTempTable(\\"medicare\\")"]},{"cell_type":"code","execution_count":null,"id":"f6c168f1","metadata":{"scrolled":true},"outputs":[],"source":["# Explore the data, since it has many long columns, change the display to be vertical for easier read\\n","spark.sql(\\"SELECT * from medicare\\").show(n=10, truncate=False, vertical=True)"]},{"cell_type":"code","execution_count":null,"id":"0aec2be6","metadata":{"scrolled":true},"outputs":[],"source":["# You can also register as a view the result of another query, to avoid repetition\\n","spark.sql(\\"SELECT * FROM medicare WHERE `Provider State` = \'NY\'\\").registerTempTable(\\"ny_medicare\\")"]},{"cell_type":"code","execution_count":null,"id":"d232a5c0","metadata":{"scrolled":true},"outputs":[],"source":["# You can retrieve the results of the query into a Python variable if it\'s small enough\\n","# For example, retrieve the Diagnostric Related Group with the highest average payments in New York\\n","diagnostic_group = spark.sql(\\"\\"\\"\\n","SELECT DISTINCT FIRST_VALUE(`DRG Definition`)  OVER (ORDER BY `Average Medicare Payments` DESC) AS drg\\n","FROM ny_medicare\\n","\\"\\"\\").collect()[0][\'drg\']\\n","print(diagnostic_group)"]},{"cell_type":"code","execution_count":null,"id":"6c75a5a8","metadata":{"scrolled":true},"outputs":[],"source":["# By default this example will save using the glue temporary bucket, you can replace it for another of your choice\\n","output_bucket = f\\"aws-glue-temporary-{boto3.client(\'sts\').get_caller_identity()[\'Account\']}-{boto3.session.Session().region_name}\\"\\n","\\n","provider_summary_df = spark.sql(\\"\\"\\"\\n","SELECT `Provider Id`, `Provider Name`, sum(` Total Discharges `) as `Total Discharges` \\n","FROM medicare GROUP BY `Provider Id`, `Provider Name`\\n","\\"\\"\\")\\n","# Save as a single CSV file with headers under the indicated s3 path\\n","# Be careful, mode overwrite will wipe the ouput directory before writing\\n","# The parenthesis are an alternative to \\\\ to break a Python command into multiple lines\\n","(provider_summary_df.coalesce(1).write\\n","    .mode(\\"overwrite\\")\\n","    .csv(f\\"s3://{output_bucket}/example/medicare_by_provider_summary/\\", header=True)\\n",")"]},{"cell_type":"code","execution_count":null,"id":"dcb264e5","metadata":{"scrolled":true},"outputs":[],"source":["# Or save it as a parquet table on the catalog, we also rename the columns for the table\\n","(provider_summary_df\\n","    .withColumnRenamed(\\"Provider Id\\", \\"provider_id\\")\\n","    .withColumnRenamed(\\"Provider Name\\", \\"provider_name\\")\\n","    .withColumnRenamed(\\"Total Discharges\\", \\"total_discharges\\")\\n","    .write\\n","    .mode(\\"overwrite\\")\\n","    .option(\\"path\\", f\\"s3://{output_bucket}/example/medicare_by_provider_summary_table/\\")\\n","    .format(\\"parquet\\")\\n","    .saveAsTable(\\"default.example_medicare_by_provider_summary\\")\\n",")"]},{"cell_type":"code","execution_count":null,"id":"d416e49c","metadata":{"scrolled":true},"outputs":[],"source":["%%sql\\n","-- Check the new catalog table\\n","DESCRIBE TABLE default.example_medicare_by_provider_summary"]},{"cell_type":"code","execution_count":null,"id":"34a8d286","metadata":{"scrolled":true},"outputs":[],"source":["# Free the cache when no longer needed \\n","medicareDF.unpersist()\\n","\\n","# Remove the table (but not the s3 files)\\n","spark.sql(\\"DROP TABLE default.example_medicare_by_provider_summary\\")"]},{"cell_type":"code","execution_count":null,"id":"aff80288","metadata":{},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Glue PySpark","language":"python","name":"glue_pyspark"},"language_info":{"codemirror_mode":{"name":"python","version":3},"file_extension":".py","mimetype":"text/x-python","name":"Python_Glue_Session","pygments_lexer":"python3"}},"nbformat":4,"nbformat_minor":5}')},2809:function(e,t,a){"use strict";a.d(t,"b",(function(){return b})),a.d(t,"a",(function(){return f}));var o=a(8),n=a(2748),i=a(30),r=a(2691),l=a(2690),s=a(196),c=Object(s.getAWSStringReplacerForConsole)().processString,d=["Amazon S3","Amazon Redshift","MySQL","PostgreSQL","Relational DB"],u=[{label:c("AWS Glue Data Catalog"),id:"Catalog",description:c("AWS Glue Data Catalog table as the data source."),iconUrl:n.b},{label:"Amazon S3",id:"S3",description:"JSON, CSV, or Parquet files stored in S3.",iconUrl:n.l},{label:"Amazon Kinesis",id:"Kinesis",description:c("Read from an Amazon Kinesis Data Stream."),iconUrl:n.e},{label:"Apache Kafka",id:"Kafka",description:c("Read from an Apache Kafka or Amazon MSK topic."),iconUrl:n.d},{label:"Relational DB",id:"RDS",description:c("AWS Glue Data Catalog table with a relational database as the data source."),iconUrl:n.i},{label:"Amazon Redshift",id:i.a.isEnabled("feature-enhanced-redshift")?"AmazonRedshift":"Redshift",description:i.a.isEnabled("feature-enhanced-redshift")?c("Read your data from Amazon Redshift."):c("AWS Glue Data Catalog table with Redshift as the data source."),iconUrl:n.j},{label:"MySQL",id:"MySQL",description:c("AWS Glue Data Catalog table with MySQL as the data source."),iconUrl:n.f},{id:"PostgresSQL",label:"PostgreSQL",description:c("AWS Glue Data Catalog table with PostgreSQL as the data source."),iconUrl:n.h},{id:"OracleSQL",label:"Oracle SQL",description:c("AWS Glue Data Catalog table with Oracle SQL as the data source."),iconUrl:n.g},{id:"SQLServer",label:"Microsoft SQL Server",description:c("AWS Glue Data Catalog table with SQL Server as the data source."),iconUrl:n.n},{id:"DBB",label:"Amazon DynamoDB",description:c("AWS Glue Data Catalog table with DynamoDB as the data source."),iconUrl:n.c}].concat(Object(o.a)(i.a.isEnabled("feature-snowflake-direct-connections")?[{label:"Snowflake",id:"Snowflake",description:c("Read your data from Snowflake."),iconUrl:n.m}]:[])),p=[{label:"Choose later",id:"None",description:"Start with only a data source."},{label:c("AWS Glue Data Catalog"),id:"Catalog",description:c("AWS Glue Data Catalog table as the data target."),iconUrl:n.b},{label:"Amazon S3",id:"S3",description:"S3 bucket by specifying a bucket path as the data target.",iconUrl:n.l},{label:"Amazon Redshift",id:i.a.isEnabled("feature-enhanced-redshift")?"AmazonRedshift":"Redshift",description:i.a.isEnabled("feature-enhanced-redshift")?c("Write your data to Amazon Redshift."):c("AWS Glue Data Catalog table with Redshift as the data target."),iconUrl:n.j},{label:"MySQL",id:"MySQL",description:c("AWS Glue Data Catalog table with MySQL as the data target."),iconUrl:n.f},{label:"PostgreSQL",id:"PostgresSQL",description:c("AWS Glue Data Catalog table with PostgreSQL as the data target."),iconUrl:n.h},{label:"Oracle SQL",id:"OracleSQL",description:c("AWS Glue Data Catalog table with Oracle SQL as the data target."),iconUrl:n.g},{label:"Microsoft SQL Server",id:"SQLServer",description:c("AWS Glue Data Catalog table with SQL Server as the data target."),iconUrl:n.n}].concat(Object(o.a)(i.a.isEnabled("feature-snowflake-direct-connections")?[{label:"Snowflake",id:"Snowflake",description:c("Write your data to Snowflake."),iconUrl:n.m}]:[])),b=u.filter((function(e){return i.a.isEnabled("feature-hidden-in-adc")?d.includes(e.label):i.a.isEnabled("feature-new-sources-sinks")||"None"===e.id||!r.c.includes(e.id)})),f=p.filter((function(e){return i.a.isEnabled("feature-hidden-in-adc")?d.includes(e.label):i.a.isEnabled("feature-new-sources-sinks")||"None"===e.id||!l.c.includes(e.id)}))},2961:function(e,t,a){},2962:function(e,t,a){},2963:function(e,t,a){},2964:function(e,t,a){},2996:function(e,t,a){"use strict";a.r(t);var o,n,i,r,l,s,c,d=a(906),u=a(281),p=a(99),b=a(0),f=a(61),m=a(124),h=a(146),g=a(30),j=a(2),y=a(398),v=a(46),O=a(41),x=a(82),k=a(754),_=a(354),w=a(879),S=a(880),C=a(103),M=a(377),T=a(29),A={height:"40",viewBox:"0 8 50 35"},E={jobType:void 0,modal:{visual:void 0,notebook:{engine:"glueetl",selected:"blank",iamRoleARN:""},script:{engine:"spark",selected:"blank"},sample:{iamRoleARN:""}},samples:{}},L="/editor/blank",P=a(1),R="new.job.option.simplified",N=function(){return{createJob:{label:Object(P.jsx)(f.a,{id:"".concat(R,".create.title"),defaultMessage:"Create job",description:"Title for new job creation widget"}),info:Object(P.jsx)(f.a,{id:"".concat(R,".create.title.linkAriaLabel"),defaultMessage:"More information for 'Create job' (shows in sidebar).",description:"Info panel link aria label for the title of new job creation widget.",children:function(e){return Object(P.jsx)(h.a,{contentKey:"manage-jobs-hp-select-source-target",linkAriaLabel:e})}})},sampleJob:{label:Object(P.jsx)(f.a,{id:"".concat(R,".sample.title"),defaultMessage:"Example jobs",description:"Title for sample job creation widget"}),info:Object(P.jsx)(f.a,{id:"".concat(R,".sample.title.linkAriaLabel"),defaultMessage:"More information for 'Example jobs' (shows in sidebar).",description:"Info panel link aria label for the title of example job creation widget.",children:function(e){return Object(P.jsx)(h.a,{contentKey:"create-job-sample-job-hp",linkAriaLabel:e})}}),button:Object(P.jsx)(f.a,{id:"".concat(R,".sample.button"),defaultMessage:"Create example job",description:"Label for creating sample job button"})}}},D=a(100),V=T.validationMessages.common.required,F=D.h().shape({iamRoleARN:D.i().required(V),engine:D.i(),selected:D.i()}),I=T.validationMessages.common.required,z=D.h().shape({iamRoleARN:D.i().required(I)}),G=D.h().when("jobType",{is:"notebook",then:D.h().shape({notebook:F})}).when("jobType",{is:"sample",then:D.h().shape({sample:z})}),B=D.h().shape({modal:G}),U=a(48),q=a(2734),W=a(2782),Q=a(2803),H=function(e,t){var a=t.iamRoleARN;if(Object(q.c)(e))return"/editor/visual/example/".concat(e);if(Object(q.a)(e)){var o=encodeURIComponent(a||"");return"/editor/notebook/example/".concat(e,"/role/").concat(o)}return Object(q.b)(e)?"/editor/script/example/".concat(e):L},J=function(){return"/editor/blank"},K=function(e){var t=e.engine,a=e.iamRoleARN,o=encodeURIComponent(a||""),n=encodeURIComponent("Untitled job");return"/editor/notebook/jupyter/notebookName/".concat(n,"/role/").concat(o,"/kernel/").concat(t)},Y=function(e){var t=e.engine;switch(e.selected){case"blank":return"/editor/dagless/blank/jobType/".concat(t,"/script");case"upload":return"/editor/dagless/upload/jobType/".concat(t,"/script")}},Z=function(e,t){var a=t.selected,o=t.script;if("upload"===a){var n=Object(W.b)(o);e.setQueryData(["notebookState"],n)}else e.setQueryData(["notebookState"],void 0),e.invalidateQueries(["notebookState"])},X=function(e,t){if(Object(q.a)(t)){var a=Q.a[t].script,o=Object(W.b)(a);e.setQueryData(["notebookState"],o)}else e.setQueryData(["notebookState"],void 0),e.invalidateQueries(["notebookState"])},$=function(e){return function(){return{name:e,field:Object(U.a)(e)}}},ee={jobType:$("jobType"),modal:$("modal"),samples:$("samples")},te=["title","titleId"];function ae(){return ae=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e},ae.apply(this,arguments)}function oe(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}function ne(e,t){var a=e.title,d=e.titleId,u=oe(e,te);return b.createElement("svg",ae({height:60,focusable:"false",viewBox:"0 0 50 50",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:t,"aria-labelledby":d},u),a?b.createElement("title",{id:d},a):null,o||(o=b.createElement("path",{d:"M10.6 39.8C7.8 39.8 5.5 37.5 5.5 34.7V15.8C5.5 13 7.8 10.7 10.6 10.7H39.4C42.2 10.7 44.5 13 44.5 15.8V34.7C44.5 37.5 42.2 39.8 39.4 39.8H10.6Z",fill:"white"})),n||(n=b.createElement("path",{d:"M39.4 11.8C41.6 11.8 43.5 13.6 43.5 15.9V34.8C43.5 37 41.7 38.9 39.4 38.9H10.6C8.4 38.9 6.5 37.1 6.5 34.8V15.8C6.5 13.6 8.3 11.7 10.6 11.7H39.4M39.4 9.79999H10.6C7.3 9.79999 4.5 12.5 4.5 15.9V34.8C4.5 38.1 7.2 40.9 10.6 40.9H39.4C42.7 40.9 45.5 38.2 45.5 34.8V15.8C45.4 12.5 42.7 9.79999 39.4 9.79999Z",fill:"#545B64"})),i||(i=b.createElement("path",{d:"M24 22L17.5 28.5",stroke:"#95A5A6",strokeWidth:.5153})),r||(r=b.createElement("path",{d:"M32.5 28.5L26 22",stroke:"#95A5A6",strokeWidth:.5153})),l||(l=b.createElement("path",{d:"M29.8001 18.6H20.1001V23.1H29.8001V18.6Z",fill:"#687078"})),s||(s=b.createElement("path",{d:"M23.4002 26.9H13.7002V31.4H23.4002V26.9Z",fill:"#687078"})),c||(c=b.createElement("path",{d:"M36.3001 26.9H26.6001V31.4H36.3001V26.9Z",fill:"#687078"})))}var ie,re,le,se,ce,de,ue,pe,be,fe,me,he,ge,je,ye,ve,Oe=b.forwardRef(ne),xe=(a.p,["title","titleId"]);function ke(){return ke=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e},ke.apply(this,arguments)}function _e(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}function we(e,t){var a=e.title,o=e.titleId,n=_e(e,xe);return b.createElement("svg",ke({height:60,focusable:"false",viewBox:"0 0 50 50",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:t,"aria-labelledby":o},n),a?b.createElement("title",{id:o},a):null,ie||(ie=b.createElement("path",{d:"M10.6 39.5C7.8 39.5 5.5 37.2 5.5 34.4V15.6C5.5 12.8 7.8 10.5 10.6 10.5H39.4C42.2 10.5 44.5 12.8 44.5 15.6V34.5C44.5 37.3 42.2 39.6 39.4 39.6H10.6V39.5Z",fill:"white"})),re||(re=b.createElement("path",{d:"M39.4 11.5C41.6 11.5 43.5 13.3 43.5 15.6V34.5C43.5 36.7 41.7 38.6 39.4 38.6H10.6C8.4 38.6 6.5 36.8 6.5 34.5V15.6C6.5 13.4 8.3 11.5 10.6 11.5H39.4ZM39.4 9.5H10.6C7.3 9.5 4.5 12.2 4.5 15.6V34.5C4.5 37.8 7.2 40.6 10.6 40.6H39.4C42.7 40.6 45.5 37.9 45.5 34.5V15.6C45.4 12.2 42.7 9.5 39.4 9.5Z",fill:"#545B64"})),le||(le=b.createElement("path",{d:"M32.6998 32.2999H17.2998C16.1998 32.2999 15.2998 31.4 15.2998 30.2999V19.7C15.2998 18.6 16.1998 17.7 17.2998 17.7H32.5998C33.6998 17.7 34.5998 18.6 34.5998 19.7V30.4C34.6998 31.4 33.7998 32.2999 32.6998 32.2999Z",fill:"white",stroke:"#545B64",strokeWidth:.75,strokeMiterlimit:10})),se||(se=b.createElement("path",{d:"M25.2997 17.3V16.6C25.2997 16.4 25.1997 16.3 24.9997 16.3C24.7997 16.3 24.6997 16.4 24.6997 16.6V17.3",fill:"#545B64"})),ce||(ce=b.createElement("path",{d:"M25.2997 17.3V16.6C25.2997 16.4 25.1997 16.3 24.9997 16.3C24.7997 16.3 24.6997 16.4 24.6997 16.6V17.3",stroke:"#545B64",strokeWidth:.25,strokeMiterlimit:10})),de||(de=b.createElement("path",{d:"M22.4999 17.3V16.6C22.4999 16.4 22.3999 16.3 22.1999 16.3C21.9999 16.3 21.8999 16.4 21.8999 16.6V17.3",fill:"#545B64"})),ue||(ue=b.createElement("path",{d:"M22.4999 17.3V16.6C22.4999 16.4 22.3999 16.3 22.1999 16.3C21.9999 16.3 21.8999 16.4 21.8999 16.6V17.3",stroke:"#545B64",strokeWidth:.25,strokeMiterlimit:10})),pe||(pe=b.createElement("path",{d:"M28.1 17.3V16.6C28.1 16.4 28 16.3 27.8 16.3C27.6 16.3 27.5 16.4 27.5 16.6V17.3",fill:"#545B64"})),be||(be=b.createElement("path",{d:"M28.1 17.3V16.6C28.1 16.4 28 16.3 27.8 16.3C27.6 16.3 27.5 16.4 27.5 16.6V17.3",stroke:"#545B64",strokeWidth:.25,strokeMiterlimit:10})),fe||(fe=b.createElement("path",{d:"M24.6997 18V18.9C24.6997 19.1 24.7997 19.2 24.9997 19.2C25.1997 19.2 25.2997 19.1 25.2997 18.9V18",fill:"#545B64"})),me||(me=b.createElement("path",{d:"M24.6997 18V18.9C24.6997 19.1 24.7997 19.2 24.9997 19.2C25.1997 19.2 25.2997 19.1 25.2997 18.9V18",stroke:"#545B64",strokeWidth:.25,strokeMiterlimit:10})),he||(he=b.createElement("path",{d:"M21.8999 18V18.9C21.8999 19.1 21.9999 19.2 22.1999 19.2C22.3999 19.2 22.4999 19.1 22.4999 18.9V18",fill:"#545B64"})),ge||(ge=b.createElement("path",{d:"M21.8999 18V18.9C21.8999 19.1 21.9999 19.2 22.1999 19.2C22.3999 19.2 22.4999 19.1 22.4999 18.9V18",stroke:"#545B64",strokeWidth:.25,strokeMiterlimit:10})),je||(je=b.createElement("path",{d:"M27.5 18V18.9C27.5 19.1 27.6 19.2 27.8 19.2C28 19.2 28.1 19.1 28.1 18.9V18",fill:"#545B64"})),ye||(ye=b.createElement("path",{d:"M27.5 18V18.9C27.5 19.1 27.6 19.2 27.8 19.2C28 19.2 28.1 19.1 28.1 18.9V18",stroke:"#545B64",strokeWidth:.25,strokeMiterlimit:10})),ve||(ve=b.createElement("path",{d:"M19.561 25.0862V24.2659L23.4478 22.2639V23.1379L20.3667 24.6809L23.4478 26.2385V27.1125L19.561 25.0862ZM23.9165 28.3381L25.6157 20.9358H26.1968L24.4927 28.3381H23.9165ZM30.5278 25.0862L26.6411 27.1125V26.2385L29.7222 24.6809L26.6411 23.1379V22.2639L30.5278 24.2659V25.0862Z",fill:"#545B64"})))}var Se,Ce,Me,Te,Ae=b.forwardRef(we),Ee=(a.p,["title","titleId"]);function Le(){return Le=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e},Le.apply(this,arguments)}function Pe(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}function Re(e,t){var a=e.title,o=e.titleId,n=Pe(e,Ee);return b.createElement("svg",Le({height:60,focusable:"false",id:"Layer_1",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",x:"0px",y:"0px",viewBox:"0 0 50 50",style:{enableBackground:"new 0 0 50 50"},xmlSpace:"preserve",ref:t,"aria-labelledby":o},n),a?b.createElement("title",{id:o},a):null,Se||(Se=b.createElement("style",{type:"text/css"},"\n\t.st0{fill:#FFFFFF;}\n\t.st1{fill:#545B64;}\n\t.st2{display:none;fill:#545B64;enable-background:new    ;}\n\t.st3{font-family:'AmazonEmber-Medium';}\n\t.st4{font-size:11px;}\n\t.st5{font-family:'AmazonEmber-Regular';}\n")),Ce||(Ce=b.createElement("g",null,b.createElement("path",{className:"st0",d:"M5.5,16.5c0-2.8,2.2-5,5-5h28c2.8,0,5,2.2,5,5v19c0,2.8-2.2,5-5,5h-28c-2.8,0-5-2.2-5-5V16.5z"}),b.createElement("path",{className:"st1",d:"M42.5,35.5c0,2.2-1.8,4-4,4h-28c-2.2,0-4-1.8-4-4v-19c0-2.2,1.8-4,4-4h28c2.2,0,4,1.8,4,4V35.5 M44.5,35.5v-19 c0-3.3-2.7-6-6-6h-28c-3.3,0-6,2.7-6,6v19c0,3.3,2.7,6,6,6h28C41.8,41.5,44.5,38.8,44.5,35.5L44.5,35.5z"}))),Me||(Me=b.createElement("text",{transform:"matrix(1 0 0 1 15.3887 29.0273)",className:"st2 st3 st4"},"&lt;/&gt;")),Te||(Te=b.createElement("text",{transform:"matrix(1 0 0 1 18.3887 29.0273)",className:"st1 st5 st4"},"{ };")))}var Ne=b.forwardRef(Re),De=(a.p,"".concat(R,".button")),Ve=(a(2961),ee.jobType),Fe=function(e){var t=e.jobType,a={visual:{label:Object(P.jsx)(f.a,{id:"".concat(De,".visual.label"),defaultMessage:"Visual ETL",description:"Label for the Visual ETL tile."}),description:Object(P.jsx)(f.a,{id:"".concat(De,".visual.description"),defaultMessage:"Author in a visual interface focused on data flow.",description:"Description for the Visual ETL tile."}),icon:Object(P.jsx)(Oe,{}),isPrimary:!0},notebook:{label:Object(P.jsx)(f.a,{id:"".concat(De,".notebook.label"),defaultMessage:"Notebook",description:"Label for the Notebook tile."}),description:Object(P.jsx)(f.a,{id:"".concat(De,".notebook.description"),defaultMessage:"Author using an interactive code notebook.",description:"Description for the Notebook tile."}),icon:Object(P.jsx)(Ae,{}),isPrimary:!1},script:{label:Object(P.jsx)(f.a,{id:"".concat(De,".script.label"),defaultMessage:"Script editor",description:"Label for the Script tile."}),description:Object(P.jsx)(f.a,{id:"".concat(De,".script.description"),defaultMessage:"Author code with a script editor.",description:"Description for the Script tile."}),icon:Object(P.jsx)(Ne,{}),isPrimary:!1}}[t],o=a.label,n=a.description,i=a.icon,r=a.isPrimary,l=Ve(),s=Object(j.a)(l.field,3)[2].setValue,c=Object(v.a)().submitForm,d=r?"primary":"normal";return Object(P.jsxs)("div",{className:"glue__create-job-button",children:[Object(P.jsx)(C.default,{padding:{right:"s"},children:i}),Object(P.jsxs)(p.default,{direction:"vertical",size:"xxs",children:[n&&Object(P.jsx)("div",{children:n}),Object(P.jsx)(x.default,{variant:d,formAction:"none",onClick:function(){s(t),Object(T.captureCustomAnalytics)(T.PanoramaEventType.CLICK,"landing_page_primary","".concat(t)),r&&c()},children:o})]})]})},Ie=a(310),ze="".concat(R,".modal"),Ge=function(){return{headers:{visual:null,notebook:Object(P.jsx)(f.a,{id:"".concat(ze,".notebook.header"),defaultMessage:"Notebook",description:"Header for create Notebook job modal in simplified flow"}),script:Object(P.jsx)(f.a,{id:"".concat(ze,".script.header"),defaultMessage:"Script",description:"Header for create Script job modal in simplified flow"}),sample:Object(P.jsx)(f.a,{id:"".concat(ze,".sample.header"),defaultMessage:"Choose an IAM Role for your notebook",description:"Header for create Sample job modal in simplified flow"})},footers:{primary:{visual:null,notebook:Object(P.jsx)(f.a,{id:"".concat(ze,".notebook.footer.primary.label"),defaultMessage:"Create notebook",description:"Footer label for create Notebook job modal in simplified flow"}),script:Object(P.jsx)(f.a,{id:"".concat(ze,".script.footer.primary.label"),defaultMessage:"Create script",description:"Footer label for create Script job modal in simplified flow"}),sample:Object(P.jsx)(f.a,{id:"".concat(ze,".sample.footer.primary.label"),defaultMessage:"Continue to example",description:"Footer label for create Sample job modal in simplified flow"})},secondary:Object(P.jsx)(f.a,{id:"".concat(ze,".footer.secondary"),defaultMessage:"Cancel",description:"Label for cancel button in create job modal"})}}},Be=a(50),Ue=a(351),qe="modal",We=function(e){var t=e();return Object.entries(t).map((function(e){var t=Object(j.a)(e,2),a=t[0],o=t[1];return{label:o.label,description:o.description,value:a}}))},Qe=function(e){var t=e();return Object.entries(t).filter((function(e){return Object(j.a)(e,2)[1].isVisible})).map((function(e){var t=Object(j.a)(e,2),a=t[0],o=t[1];return{label:o.label,description:o.description,value:a}}))},He=($("".concat(qe,".visual")),$("".concat(qe,".notebook")),$("".concat(qe,".script")),$("".concat(qe,".sample")),"".concat(ze,".notebook")),Je=function(){var e=Object(Ue.a)();return{glueetl:{label:e.formatMessage({id:"".concat(He,".engine.spark"),defaultMessage:"Spark (Python)",description:"Label for spark engine option in notebook job creation modal"}),isVisible:!0},glueray:{label:e.formatMessage({id:"".concat(He,".engine.glueray"),defaultMessage:"Ray (Python)",description:"Label for ray engine option in notebook job creation modal"}),isVisible:g.a.isEnabled("feature-manta")}}},Ke=function(){return{blank:{label:Object(P.jsx)(f.a,{id:"".concat(He,".selection.blank"),defaultMessage:"Start fresh",description:"Label for blank selection in notebook job creation modal"})},upload:{label:Object(P.jsx)(f.a,{id:"".concat(He,".selection.uplaod"),defaultMessage:"Upload Notebook",description:"Label for upload job selection in notebook job creation modal"})}}},Ye=function(){return{engine:Object(P.jsx)(f.a,{id:"".concat(He,".engine.header"),defaultMessage:"Engine",description:"Header for engine selection section in the notebook job creation modal"}),create:Object(P.jsx)(f.a,{id:"".concat(He,".create.header"),defaultMessage:"Options",description:"Header for create options section in notebook job creation modal"})}},Ze="".concat(qe,".").concat("notebook"),Xe={engine:$("".concat(Ze,".engine")),selected:$("".concat(Ze,".selected")),iamRoleARN:$("".concat(Ze,".iamRoleARN")),script:$("".concat(Ze,".script"))},$e="".concat(ze,".iam"),et=a(76),tt=a(2725),at=a(62),ot=function(e){var t=e.useIamRoleField,a=Object(j.a)(t().field,3),o=a[0].value,n=a[1],i=n.touched,r=n.error,l=a[2],s=l.setValue,c=l.setTouched,d=Object(T.useIamRoles)(et.l),u=d.options,p=d.status,m={label:Object(P.jsx)(f.a,{id:"".concat($e,".label"),defaultMessage:"IAM role",description:"Label for IAM role selector in create job modal"}),description:Object(P.jsx)(f.a,{id:"".concat($e,".description"),defaultMessage:"Role assumed by the job with permission to access your data stores. Ensure that this role has permission to your Amazon S3 sources, targets, temporary directory, scripts, and any other libraries used in the job.",description:"Description for IAM role selector in create job modal"})},h=m.label,g=m.description,y=Object(tt.a)(),v=y.defaultRoleArn,O=y.status;return Object(b.useEffect)((function(){var e="success"===p&&"success"===O&&v&&v!==o&&function(e,t){return e.some((function(e){return e.value===t}))}(u,v);e&&!i&&s(v)}),[p,O,o,v,s,u,i]),Object(P.jsx)(Be.default,{label:h,description:g,errorText:i&&r?r:"",children:Object(P.jsx)(T.IamRoleSelector,{iamApi:et.l,showReloadButton:!0,showViewButton:!1,onChange:function(e){var t=e.detail;Object(at.unstable_batchedUpdates)((function(){var e;c(!0),s(null!==(e=t.selectedOption.value)&&void 0!==e?e:"")}))},selectedOption:u.find((function(e){return e.value===o}))})})},nt=a(3),it=a(8),rt=a(233),lt=a(49),st=(a(2962),function(e){var t=e.method,a=e.onChange,o=e.mimeTypes,n=e.formFieldProps,i=e.disabled,r=void 0!==i&&i,l=Object(Ue.a)(),s=Object(b.useRef)(null),c=function(e){var t=Object(b.useState)(),a=Object(j.a)(t,2),o=a[0],n=a[1],i=Object(b.useState)(null),r=Object(j.a)(i,2),l=r[0],s=r[1],c=Object(b.useState)(null),d=Object(j.a)(c,2),u=d[0],p=d[1],f=Object(b.useState)(!1),m=Object(j.a)(f,2),h=m[0],g=m[1],y=o?{name:o.name,lastModified:o.lastModified,type:o.type,formattedFileSize:Object(T.formatBytes)(o.size),fileExtension:o.name.slice(2+(o.name.lastIndexOf(".")-1>>>0))}:void 0;return Object(b.useEffect)((function(){var t=new FileReader;if(!o)return p(null),void s(null);t.onloadstart=function(){g(!0)},t.onloadend=function(){g(!1)},t.onload=function(e){var t=e.target;p(null===t||void 0===t?void 0:t.result)},t.onerror=function(e){s(e)};try{t[e](o)}catch(l){s(l)}}),[o,e]),[{result:u,error:l,file:y,loading:h},n]}(t),d=Object(j.a)(c,2),u=d[0],p=u.result,m=u.error,h=u.loading,g=u.file,y=d[1],v=null===g||void 0===g?void 0:g.fileExtension,O=Object(it.a)(o).join(","),k=Object(b.useCallback)((function(e){return new CustomEvent("fileUpload",{detail:{file:e}})}),[]),_=Object(b.useCallback)((function(e){var t=e.target.files,a=Object(j.a)(t,1)[0];a&&y(a)}),[y]);return Object(b.useEffect)((function(){null===a||void 0===a||a(k({content:p,extension:v}))}),[a,p,k,v]),Object(b.useEffect)((function(){y(void 0)}),[O,y]),Object(b.useEffect)((function(){r&&y(void 0)}),[r,y]),Object(P.jsxs)("div",{className:"glue-file-upload__container",children:[Object(P.jsxs)(Be.default,Object(nt.a)(Object(nt.a)({stretch:!0},n),{},{errorText:m&&(null===n||void 0===n?void 0:n.errorText),children:[Object(P.jsx)("input",{ref:s,type:"file",accept:O,onChange:_,hidden:!0}),Object(P.jsx)("div",{className:"awsui-form-field awsui-form-field-stretch",children:Object(P.jsx)("div",{className:"awsui-grid awsui-form-field-controls",children:Object(P.jsx)("div",{className:"awsui-form-field-control col-xxxs-12 col-xs-9","awsui-form-field-region":"control",children:Object(P.jsx)(x.default,{iconName:"upload",variant:"normal",formAction:"none",onClick:function(){s.current&&s.current.click()},loading:h,disabled:r,children:Object(P.jsx)(f.a,{id:"file.upload.field.button",description:"Description for the file upload field.",defaultMessage:"Choose file"})})})})})]})),g&&Object(P.jsx)("div",{className:"awsui-form-field awsui-form-field-stretch",children:Object(P.jsx)("div",{className:"awsui-grid awsui-form-field-controls",children:Object(P.jsx)("div",{className:"awsui-row",children:Object(P.jsx)("div",{className:"awsui-form-field-control col-xxxs-12 col-xs-9","awsui-form-field-region":"control",children:Object(P.jsxs)("div",{className:"glue-file-upload__file",children:[Object(P.jsx)("span",{role:"img","aria-label":l.formatMessage({id:"file.upload.success.icon",defaultMessage:"File has been added succesfully.",description:"Label for the success icon when selecting a file to upload."}),children:Object(P.jsx)(rt.a,{name:"status-positive",size:"normal",variant:"success"})}),Object(P.jsxs)("div",{children:[Object(P.jsx)("label",{className:"awsui-form-field-label",children:Object(P.jsx)("span",{children:null===g||void 0===g?void 0:g.name})}),Object(P.jsx)("div",{className:"awsui-form-field-description","aria-label":l.formatMessage({id:"file.upload.success.size",defaultMessage:"File size.",description:"File size description."}),children:null===g||void 0===g?void 0:g.formattedFileSize}),Object(P.jsx)("div",{className:"awsui-form-field-description","aria-label":l.formatMessage({id:"file.upload.success.lastModified",defaultMessage:"Last modified.",description:"File last modified description."}),children:Object(P.jsx)(lt.FormattedDate,{month:"long",day:"2-digit",year:"numeric",value:null===g||void 0===g?void 0:g.lastModified})})]})]})})})})})]})}),ct=a(881),dt=a(171),ut=Xe.engine,pt=Xe.selected,bt=Xe.iamRoleARN,ft=Xe.script,mt=function(){return Object(P.jsxs)(p.default,{direction:"vertical",size:"xl",children:[g.a.isEnabled("feature-manta")?Object(P.jsx)(ht,{}):null,Object(P.jsx)(gt,{}),Object(P.jsx)(ot,{useIamRoleField:bt}),g.a.isEnabled("feature-code-whisperer")&&Object(P.jsx)(yt,{}),g.a.isEnabled("feature-sensei-notebook")&&Object(P.jsx)(vt,{})]})},ht=function(){var e=Ye().engine,t=ut().name,a=Qe(Je);return Object(P.jsx)(Be.default,{label:e,children:Object(P.jsx)(T.FormSelectField,{fieldName:t,options:a,getOptionFromValue:function(e){var t=a.find((function(t){return t.value===e}));return null!==t&&void 0!==t?t:null}})})},gt=function(){var e=Ye().create,t=pt(),a=t.name,o=Object(j.a)(t.field,1)[0].value,n=We(Ke);return Object(P.jsx)(Be.default,{label:e,children:Object(P.jsxs)(p.default,{direction:"vertical",size:"xxs",children:[Object(P.jsx)(T.FormRadioField,{fieldName:a,items:n}),Object(P.jsx)(jt,{selected:o})]})})},jt=function(e){var t=e.selected,a=Object(b.useContext)(ct.a).setUserScript,o=ft(),n=Object(j.a)(o.field,3)[2].setValue,i=Object(b.useCallback)((function(e){var t=e.detail.file;null!==t.content&&(a(t),n(t.content))}),[a,n]);return Object(P.jsx)(C.default,{margin:{left:"l"},children:Object(P.jsx)(st,{method:"readAsText",mimeTypes:[".ipynb"],formFieldProps:{constraintText:Object(P.jsx)(f.a,{id:"file.upload.field.description.python",description:"File type constraint text for Python-only upload.",defaultMessage:"Limited to Jupyter Notebook (*.ipynb) files only."}),errorText:Object(P.jsx)(f.a,{id:"file.upload.field.errorText.python",description:"There was an issue selecting your file, please try again.",defaultMessage:"Unsupported file format; please upload a supported Python script."})},onChange:i,disabled:"upload"!==t})})},yt=function(){return Object(P.jsx)(dt.default,{statusIconAriaLabel:"Info",children:Object(P.jsx)(f.a,{id:"".concat(He,".info.sensei"),defaultMessage:"To use AWS Glue Studio Notebook with CodeWhisperer and generate code, please ensure that your role has appropriate <help>permissions</help>.",description:"Info text and link to public documentation for AWS Q for Glue plugin in Glue Studio notebook.",values:{help:function(e){return Object(P.jsx)(T.LearnMoreLink,{href:"https://docs.aws.amazon.com/codewhisperer/latest/userguide/glue-setup.html",children:e})}}})})},vt=function(){return Object(P.jsx)(dt.default,{statusIconAriaLabel:"Info",children:Object(P.jsx)(f.a,{id:"".concat(He,".info.sensei"),defaultMessage:"You can now use natural language to author jobs or ask questions in AWS Glue Studio Notebook. To learn more, visit the <help>documentation</help>.",description:"Info text and link to public documentation for AWS Q for Glue plugin in Glue Studio notebook.",values:{help:function(e){return Object(P.jsx)(T.LearnMoreLink,{href:"https://docs.aws.amazon.com/glue/latest/dg/q-using-notebooks.html",children:e})}}})})},Ot="".concat(ze,".notebook"),xt=function(){var e=Object(Ue.a)();return{pythonShell:{label:e.formatMessage({id:"".concat(Ot,".engine.pythonshell"),defaultMessage:"Python shell",description:"Label for python shell engine option in script job creation modal"}),isVisible:!0},glueray:{label:e.formatMessage({id:"".concat(Ot,".engine.glueray"),defaultMessage:"Ray",description:"Label for ray engine option in script job creation modal"}),isVisible:g.a.isEnabled("feature-manta")},spark:{label:e.formatMessage({id:"".concat(Ot,".engine.sparkpython"),defaultMessage:"Spark",description:"Label for spark python engine option in script job creation modal"}),isVisible:!0}}},kt=function(){return{blank:{label:Object(P.jsx)(f.a,{id:"".concat(Ot,".selection.example"),defaultMessage:"Start fresh",description:"Label for blank selection in script job creation modal"})},upload:{label:Object(P.jsx)(f.a,{id:"".concat(Ot,".selection.uplaod"),defaultMessage:"Upload script",description:"Label for upload job selection in script job creation modal"})}}},_t=function(){return{engine:Object(P.jsx)(f.a,{id:"".concat(Ot,".engine.header"),defaultMessage:"Engine",description:"Header for engine selection section in the script job creation modal"}),create:Object(P.jsx)(f.a,{id:"".concat(Ot,".create.header"),defaultMessage:"Options",description:"Header for create options section in script job creation modal"})}},wt="".concat(qe,".").concat("script"),St={engine:$("".concat(wt,".engine")),selected:$("".concat(wt,".selected"))},Ct=St.engine,Mt=St.selected,Tt=function(){return Object(P.jsxs)(p.default,{direction:"vertical",size:"xl",children:[Object(P.jsx)(At,{}),Object(P.jsx)(Et,{})]})},At=function(){var e=_t().engine,t=Ct().name,a=Qe(xt);return Object(P.jsx)(Be.default,{label:e,children:Object(P.jsx)(T.FormSelectField,{fieldName:t,options:a,getOptionFromValue:function(e){var t=a.find((function(t){return t.value===e}));return null!==t&&void 0!==t?t:null}})})},Et=function(){var e=_t().create,t=Mt(),a=t.name,o=Object(j.a)(t.field,1)[0].value,n=We(kt);return Object(P.jsx)(Be.default,{label:e,children:Object(P.jsxs)(p.default,{direction:"vertical",size:"xxs",children:[Object(P.jsx)(T.FormRadioField,{fieldName:a,items:n}),Object(P.jsx)(Lt,{selected:o})]})})},Lt=function(e){var t=e.selected,a=Object(b.useContext)(ct.a).setUserScript,o=Object(b.useCallback)((function(e){var t=e.detail.file;null!==t.content&&a(t)}),[a]);return Object(P.jsx)(C.default,{margin:{left:"l"},children:Object(P.jsx)(st,{method:"readAsText",mimeTypes:["text/x-python","text/x-python-script",".py3",".py",".py2"],formFieldProps:{constraintText:Object(P.jsx)(f.a,{id:"file.upload.field.description.python",description:"File type constraint text for Python-only upload.",defaultMessage:"Limited to Python (*.py, *.py3) files only."}),errorText:Object(P.jsx)(f.a,{id:"file.upload.field.errorText.default",description:"There was an issue selecting your file, please try again.",defaultMessage:"Unsupported file format; please upload a supported Python or Scala script."})},onChange:o,disabled:"upload"!==t})})},Pt="".concat(qe,".").concat("sample"),Rt={iamRoleARN:$("".concat(Pt,".iamRoleARN"))}.iamRoleARN,Nt=function(){return Object(P.jsx)(ot,{useIamRoleField:Rt})},Dt=ee.jobType,Vt=function(){var e=Object(j.a)(Dt().field,3),t=e[0].value,a=e[2].setValue,o=Ge().headers,n=Object(v.a)().setValues,i=document.querySelector("#app.glue form")||void 0,r=Object(b.useMemo)((function(){return t?o[t]:null}),[t,o]),l=Object(b.useMemo)((function(){return t?Object(P.jsx)(It,{option:t,onCancel:function(){return a(void 0)}}):null}),[t,a]),s=Object(b.useCallback)((function(){a(void 0),n(E),Object(T.captureCustomAnalytics)(T.PanoramaEventType.CLICK,"landing_page_modal","modal_dimissed")}),[a,n]),c=!!t;return Object(P.jsx)(Ie.default,{header:r,footer:l,visible:c,size:"large",onDismiss:s,modalRoot:i,children:Object(P.jsx)(Ft,{option:t})})},Ft=function(e){switch(e.option){case"visual":default:return Object(P.jsx)(P.Fragment,{});case"notebook":return Object(P.jsx)(mt,{});case"script":return Object(P.jsx)(Tt,{});case"sample":return Object(P.jsx)(Nt,{})}},It=function(e){var t=e.option,a=e.onCancel,o=Object(v.a)().submitForm,n=Object(b.useCallback)((function(){o(),Object(T.captureCustomAnalytics)(T.PanoramaEventType.CLICK,"landing_page_modal","modla_submit_".concat(t))}),[o,t]),i=Ge().footers,r=i.primary,l=i.secondary;return Object(P.jsx)(C.default,{float:"right",children:Object(P.jsxs)(p.default,{direction:"horizontal",size:"s",children:[Object(P.jsx)(x.default,{variant:"normal",formAction:"none",onClick:a,children:l}),Object(P.jsx)(x.default,{variant:"primary",formAction:"submit",onClick:n,children:r[t]})]})})},zt=a(885),Gt=function(e,t){if(!t)return null;var a=e.find((function(e){return e.value===t}));return a?a.value:null},Bt=a(2627),Ut=a(196),qt=a(1210),Wt=Object(Ut.getAWSStringReplacerForConsole)().processString,Qt="".concat(R,".tiles"),Ht=(qt.a,f.a,"".concat(Qt,".badge"),function(){return{"visual-join-csv":{label:Object(P.jsx)(f.a,{id:"".concat(Qt,".visual.join-csv.label"),defaultMessage:"Visual ETL job to join multiple sources",description:"Label for example visual job that joins several CSVs"}),description:Object(P.jsx)(f.a,{id:"".concat(Qt,".visual.join-csv.description"),defaultMessage:"Read three CSV files, combine the data, change the data types, then write the data to Amazon S3 and catalog it for querying later.",description:"Description for example visual job that joins several CSVs"}),image:Object(P.jsx)(Oe,Object(nt.a)({},A)),isVisible:!0}}}),Jt=function(){return{"notebook-ray":{label:Object(P.jsx)(f.a,{id:"".concat(Qt,".notebook.notebook-ray.label"),defaultMessage:"Ray notebook for parallelizing Python",description:"Label for example notebook job using ray"}),description:Object(P.jsx)(f.a,{id:"".concat(Qt,".notebook.notebook-ray.description"),defaultMessage:"Use the Ray framework for parallel processing in Python. Read many parquet files from S3, explore and filter the data, then save it to a CSV.",description:"Description for example notebook job using ray"}),image:Object(P.jsx)(Ae,Object(nt.a)({},A)),isVisible:g.a.isEnabled("feature-manta")&&g.a.isEnabled("feature-gluestudio-notebook")},"notebook-spark-pandas":{label:Object(P.jsx)(f.a,{id:"".concat(Qt,".notebook.notebook-spark-pandas.label"),defaultMessage:"Spark notebook using Pandas",description:"Label for example notebook job using spark and pandas"}),description:Object(P.jsx)(f.a,{id:"".concat(Qt,".notebook.notebook-spark-pandas.description"),defaultMessage:"Explore and visualize data using the popular Pandas framework combined with Spark.",description:"Description for example notebook job using spark and pandas"}),image:Object(P.jsx)(Ae,Object(nt.a)({},A)),isVisible:g.a.isEnabled("feature-gluestudio-notebook")},"notebook-spark-sql":{label:Object(P.jsx)(f.a,{id:"".concat(Qt,".notebook.notebook-spark-sql.label"),defaultMessage:"Spark notebook using SQL",description:"Label for example notebook job using spark and sql"}),description:Object(P.jsx)(f.a,{id:"".concat(Qt,".notebook.notebook-spark-sql.description"),defaultMessage:"Use SQL to get started quickly with Apache Spark. Access data via the {dataCatalog} and transform it using familiar commands.",description:"Description for example notebook job using spark and sql",values:{dataCatalog:Wt("AWS Glue Data Catalog")}}),image:Object(P.jsx)(Ae,Object(nt.a)({},A)),isVisible:g.a.isEnabled("feature-gluestudio-notebook")}}},Kt=function(){return{}},Yt=function(e){var t=e.definition,a=t.label.props.defaultMessage;return Object(P.jsx)(C.default,{padding:{top:"xxs",bottom:"xs"},children:Object(P.jsxs)("div",{style:{display:"flex",flexWrap:"nowrap"},children:[Object(P.jsx)(C.default,{padding:{right:"xxs"},children:t.image}),Object(P.jsx)(Bt.a,{label:a,description:t.description})]})})},Zt=function(e){var t=e();return Object.entries(t).filter((function(e){return Object(j.a)(e,2)[1].isVisible})).map((function(e){var t=Object(j.a)(e,2),a=t[0],o=t[1];return{label:Yt({definition:o}),value:a}}))},Xt={selected:$("".concat("samples",".selected"))}.selected,$t=function(){var e=[].concat(Object(it.a)(Zt(Ht)),Object(it.a)(Zt(Jt)),Object(it.a)(Zt(Kt))),t={ariaLabel:Object(Ue.a)().formatMessage({id:"".concat(Qt,".ariaLabel"),defaultMessage:"Example jobs",description:"Aria label for sample jobs tiles"})},a=Object(j.a)(Xt().field,3),o=a[0].value,n=a[2].setValue,i=Object(b.useCallback)((function(e){var t=e.detail.value;n(t||void 0),Object(T.captureCustomAnalytics)(T.PanoramaEventType.CLICK,"landing_page_example_jobs","tile_".concat(t,"_clicked"))}),[n]);return Object(P.jsx)(zt.a,{items:e,value:Gt(e,o),onChange:i,columns:3,ariaLabel:t.ariaLabel})},ea=a(414),ta=ee.jobType,aa=ee.samples,oa=function(){var e=Object(ea.b)().setNavigationOpen,t=Object(O.h)(),a=Object(M.b)(),o=Object(b.useCallback)((function(o){e(!1),function(e,t){var a=t.jobType,o=t.modal.notebook,n=t.samples.selected;switch(a){case"notebook":Z(e,o);break;case"sample":n&&X(e,n);break;default:e.setQueryData(["notebookState"],void 0),e.invalidateQueries(["notebookState"])}}(a,o),t.push(function(e){var t=e.jobType,a=e.modal,o=a.notebook,n=a.script,i=a.sample,r=e.samples.selected;switch(t){case"visual":return J();case"notebook":return K(o);case"script":return Y(n);case"sample":if(r)return H(r,i)}return L}(o))}),[e,a,t]);return Object(P.jsx)(y.a,{initialValues:E,onSubmit:o,validationSchema:B,children:Object(P.jsxs)(w.a,{children:[Object(P.jsxs)(p.default,{direction:"vertical",size:"l",children:[Object(P.jsx)(na,{}),g.a.isEnabled("feature-example-jobs")&&Object(P.jsx)(sa,{})]}),Object(P.jsx)(Vt,{})]})})},na=function(){return Object(P.jsx)(k.a,{header:Object(P.jsx)(ia,{}),children:Object(P.jsx)(C.default,{padding:{left:"xs"},children:Object(P.jsx)(la,{})})})},ia=function(){var e=N().createJob,t=e.info,a=e.label;return Object(P.jsx)(u.a,{info:t,children:a})},ra=function(e){var t=e.children;return Object(P.jsx)("div",{style:{borderRight:"1px solid #e2e2e2"},children:t})},la=function(){return Object(P.jsxs)(S.a,{gridDefinition:[{colspan:4},{colspan:4},{colspan:4}],children:[Object(P.jsx)(ra,{children:Object(P.jsx)(Fe,{jobType:"visual"})}),g.a.isEnabled("feature-gluestudio-notebook")?Object(P.jsx)(ra,{children:Object(P.jsx)(Fe,{jobType:"notebook"})}):null,Object(P.jsx)(Fe,{jobType:"script"})]})},sa=function(){var e=N().sampleJob,t=e.info,a=e.label,o=e.button,n=Object(j.a)(ta().field,3)[2].setValue,i=Object(j.a)(aa().field,3),r=i[0].value,l=i[2].setValue,s=Object(v.a)().submitForm,c=Object(b.useCallback)((function(){var e,t=null!==(e=r.selected)&&void 0!==e?e:"";n("sample"),Object(T.captureCustomAnalytics)(T.PanoramaEventType.CLICK,"landing_page_example_jobs","submit_clicked"),Object(q.a)(t)||s()}),[r,n,s]);return Object(P.jsx)(_.a,{headerText:a,headerInfo:t,variant:"container",defaultExpanded:!1,headerActions:Object(P.jsx)(x.default,{variant:"normal",formAction:"submit",disabled:!r.selected,onClick:c,children:o}),onChange:function(){return l(E.samples)},children:Object(P.jsx)($t,{})})},ca=a(42),da=a(928),ua=a(311),pa=a(500);a(2963);function ba(e){var t=e.codeEditorMode,a=e.onCodeEditorModeChange,o=e.onScriptChange,n=e.scriptType,i=Object(Ue.a)(),r="pythonShell"===n,l=["text/x-python","text/x-python-script",".py3",".py",".py2"].concat(Object(it.a)(r?[]:[".scala"]));return Object(P.jsx)("div",{className:"glue__code-editor-selector",children:Object(P.jsxs)(Be.default,{stretch:!0,label:Object(P.jsx)("strong",{children:Object(P.jsx)(f.a,{id:"code.editor.selector.radio.group.label",description:"Label for code editor selector radio group.",defaultMessage:"Options"})}),info:Object(P.jsx)(f.a,{id:"code.editor.selector.radio.group.label.linkAriaLabel",defaultMessage:"More information for 'Options' (shows in sidebar).",description:"Info panel link aria label for the label of code editor selector radio group.",children:function(e){return Object(P.jsx)(h.a,{contentKey:"create-job-devmode-hp",linkAriaLabel:e})}}),children:[Object(P.jsx)(ua.default,{onChange:function(e){var t=e.detail.value;return a(t)},value:t,items:[{value:"blank-editor",label:i.formatMessage({id:"code.editor.selector.blank.label",defaultMessage:"Create a new script with boilerplate code",description:"Label for the blank code editor option."})},{value:"upload-script",label:i.formatMessage({id:"code.editor.selector.upload.label",defaultMessage:"Upload and edit an existing script",description:"Label for the upload script code editor option."}),description:i.formatMessage({id:"code.editor.selector.upload.description",defaultMessage:"Choose a local file.",description:"Description for the upload script code editor option."})}]}),"upload-script"===t&&Object(P.jsx)(st,{method:"readAsText",mimeTypes:l,formFieldProps:{label:Object(P.jsx)(f.a,{id:"file.upload.field.label",description:"Label for the file upload field.",defaultMessage:"File upload"}),constraintText:r?Object(P.jsx)(f.a,{id:"file.upload.field.description.python",description:"File type constraint text for Python-only upload.",defaultMessage:"Limited to Python (*.py, *.py3) files only."}):Object(P.jsx)(f.a,{id:"file.upload.field.description.default",description:"File type constraint text.",defaultMessage:"Limited to Python (*.py, *.py3) and Scala (*.scala) files only."}),errorText:r?Object(P.jsx)(f.a,{id:"file.upload.field.errorText.python",description:"There was an issue selecting your file, please try again.",defaultMessage:"Unsupported file format; please upload a supported Python script."}):Object(P.jsx)(f.a,{id:"file.upload.field.errorText.default",description:"There was an issue selecting your file, please try again.",defaultMessage:"Unsupported file format; please upload a supported Python or Scala script."})},onChange:o})]})})}a(2964);function fa(e){var t=e.codeEditorMode,a=e.onCodeEditorModeChange,o=e.onScriptChange,n=Object(M.b)(),i=Object(Ue.a)(),r=Object(b.useCallback)((function(e){return new CustomEvent("fileUpload",{detail:{file:e}})}),[]),l=Object(b.useCallback)((function(e){var t=e.detail.value;a(t),n.invalidateQueries(["notebookState"])}),[a,n]),s=Object(b.useCallback)((function(e){var t=e.detail.file.content;if(t){var a=Object(W.b)(t);o(r({content:null===a||void 0===a?void 0:a.source})),n.setQueryData(["notebookState"],a)}}),[n,o,r]);return Object(P.jsx)("div",{className:"glue__code-editor-selector",children:Object(P.jsxs)(Be.default,{stretch:!0,label:Object(P.jsx)(C.default,{variant:"h4",margin:{top:"m"},children:Object(P.jsx)(f.a,{id:"notebook.editor.selector.radio.group.label",description:"Label for notebook editor selector radio group label.",defaultMessage:"Options"})}),children:[Object(P.jsx)(ua.default,{onChange:l,value:t,items:[{value:"blank-editor",label:i.formatMessage({id:"notebook.editor.selector.blank.label",defaultMessage:"Create a new notebook from scratch",description:"Label for the blank notebook editor option."})},{value:"upload-script",label:i.formatMessage({id:"notebook.editor.selector.upload.label",defaultMessage:"Upload and edit an existing notebook",description:"Label for the upload script notebook editor option."}),description:i.formatMessage({id:"notebook.editor.selector.upload.description",defaultMessage:"Choose a local file.",description:"Description for the upload script notebook editor option."})}]}),"upload-script"===t&&Object(P.jsx)(st,{method:"readAsText",mimeTypes:[".ipynb"],formFieldProps:{label:Object(P.jsx)(f.a,{id:"file.upload.field.label",description:"Label for the file upload field.",defaultMessage:"File upload"}),constraintText:Object(P.jsx)(f.a,{id:"file.upload.field.description.python",description:"File type constraint text for Python-only upload.",defaultMessage:"Limited to Jupyter Notebook (*.ipynb) files only."}),errorText:Object(P.jsx)(f.a,{id:"file.upload.field.errorText.python",description:"There was an issue selecting your file, please try again.",defaultMessage:"Unsupported file format; please upload a supported Python script."})},onChange:s})]})})}var ma=a(550),ha=a(556),ga=a(147),ja=a(2748),ya=function(){return Object(P.jsx)("img",{role:"img",src:ja.k,alt:"right pointing arrow"})},va=a(208),Oa=a(2809),xa=Oa.b.map((function(e){return Object(nt.a)(Object(nt.a)({},e),{},{nodeType:e.id})})),ka=Oa.a.map((function(e){return Object(nt.a)(Object(nt.a)({},e),{},{nodeType:e.id})}));var _a,wa=a(875),Sa=Object(lt.defineMessages)({connectorLoadingStatus:{id:"SourceAndTargetSelector.loadingText.connectors",defaultMessage:"Loading connectors",description:"Message to show when retrieving and loading the connectors asynchronously."},connectorLoadingError:{id:"SourceAndTargetSelector.error.connectors",defaultMessage:"Unable to load connectors.",description:"Message to show when retrieving connectors was not succesful."},connectorRecoveryText:{id:"SourceAndTargetSelector.error.retry",defaultMessage:"Retry",description:"Retry message to show when retrieving connectors was not succesful."}});function Ca(e){var t=e.onSourceChange,a=e.onSinkChange,o=e.source,n=e.sink,i=Object(ga.b)(Sa),r=Object(wa.b)("source"),l=Object(wa.b)("target"),s=function(){var e=Object(va.i)(),t=e.connectorList,a=e.status,o=e.refresh,n=Object(b.useMemo)((function(){return t.map((function(e){return Object(nt.a)(Object(nt.a)({},e),{},{id:e.connectorName,nodeType:"Connector"})}))}),[t]);return{sourceOptions:Object(b.useMemo)((function(){return t&&0!==t.length&&g.a.isEnabled("feature-connectors")?[].concat(Object(it.a)(xa),Object(it.a)(n)):Object(it.a)(xa)}),[t,n]),targetOptions:Object(b.useMemo)((function(){return t&&0!==t.length&&g.a.isEnabled("feature-connectors")&&g.a.isEnabled("feature-sink-connectors")?[].concat(Object(it.a)(ka),Object(it.a)(n.filter((function(e){var t;return!(null!==(t=e.connectorType)&&void 0!==t&&t.includes("athena"))})).map((function(e){return Object(nt.a)(Object(nt.a)({},e),{},{id:e.connectorName})})))):Object(it.a)(ka)}),[t,n]),status:a,refresh:o}}(),c=s.sourceOptions,d=s.targetOptions,u=s.status;return Object(P.jsxs)(S.a,{gridDefinition:[{colspan:{default:5,xl:4}},{colspan:{default:2,xl:4}},{colspan:{default:5,xl:4}}],children:[Object(P.jsx)(Be.default,{label:"Source",stretch:!0,children:Object(b.createElement)(ma.a,Object(nt.a)(Object(nt.a)({},r),{},{key:"SourceAndTargetSelector-source",statusType:Object(ha.c)(u),filteringType:"auto",recoveryText:i.connectorRecoveryText,selectedOption:Object(wa.a)(c,o.id),onChange:function(e){var a=e.detail.selectedOption;return t({id:a.id,nodeType:a.nodeType,connectorType:a.connectorType})},options:c,triggerVariant:"option"}))}),Object(P.jsx)(C.default,{className:"glue__new-job-options-arrow-container",children:Object(P.jsx)(ya,{})}),Object(P.jsx)(Be.default,{label:"Target",stretch:!0,children:Object(b.createElement)(ma.a,Object(nt.a)(Object(nt.a)({},l),{},{key:"SourceAndTargetSelector-target",selectedOption:Object(wa.a)(d,n.id),onChange:function(e){var t=e.detail.selectedOption;return a({id:t.id,nodeType:t.nodeType,connectorType:t.connectorType})},options:d,triggerVariant:"option",filteringType:"auto"}))})]})}!function(e){e.source_and_target="source_and_target",e.blank="blank",e.code_editor="code_editor",e.python_shell="python_shell",e.notebook="notebook",e.glue_ray="glue_ray"}(_a||(_a={}));var Ma=_a.source_and_target;var Ta=Object(lt.defineMessages)({tilesAriaLabel:{id:"new.job.option.tile.ariaLabel",defaultMessage:"New job options",description:"Label for the new job options tiles."}}),Aa=["createButton","onJobModeChange","jobMode"],Ea=function(e){var t=e.createButton,a=e.onJobModeChange,o=e.jobMode,n=Object(ca.a)(e,Aa),i=Object(Ue.a)(),r=[{label:i.formatMessage({id:"new.job.option.tile.source.label",defaultMessage:"Visual with a source and target",description:"Label for the source and target tile."}),description:i.formatMessage({id:"new.job.option.tile.source.description",defaultMessage:"Start with a source, ApplyMapping transform, and target.",description:"Description for the source and target tile."}),value:"source_and_target"},{label:i.formatMessage({id:"new.job.option.tile.blank.label",defaultMessage:"Visual with a blank canvas",description:"Label for the blank editor tile."}),description:i.formatMessage({id:"new.job.option.tile.blank.description",defaultMessage:"Author using an interactive visual interface.",description:"Description for the blank editor tile."}),value:"blank"},{label:i.formatMessage({id:"new.job.option.tile.editor.label",defaultMessage:"Spark script editor",description:"Label for the code editor tile."}),description:i.formatMessage({id:"new.job.option.tile.editor.description",defaultMessage:"Write or upload your own Spark code.",description:"Description for the code editor tile."}),value:"code_editor"}],l={label:i.formatMessage({id:"new.job.option.tile.pythonShell.label",defaultMessage:"Python Shell script editor",description:"Label for the Python shell tile."}),description:i.formatMessage({id:"new.job.option.tile.pythonShell.description",defaultMessage:"Write or upload your own Python shell script.",description:"Description for the Python shell tile."}),value:"python_shell"},s={label:Object(P.jsx)(p.default,{size:"xs",direction:"horizontal",children:Object(P.jsx)(f.a,{id:"new.job.option.tile.notebook.label",defaultMessage:"Jupyter Notebook",description:"Label for the notebook tile."})}),description:i.formatMessage({id:"new.job.option.tile.notebook.description",defaultMessage:"Write your own code in a Jupyter Notebook for interactive development.",description:"Description for the notebook tile."}),value:"notebook"},c={label:Object(P.jsxs)(p.default,{size:"xs",direction:"horizontal",children:[Object(P.jsx)(f.a,{id:"new.job.option.tile.matan.label",defaultMessage:"Ray script editor",description:"Label for the manta tile."}),Object(P.jsx)(da.a,{color:"blue",children:"New"})]}),description:i.formatMessage({id:"new.job.option.tile.manta.description",defaultMessage:"Write your own code to run on Ray.",description:"Description for the manta tile."}),value:"glue_ray"},d=[].concat(r,Object(it.a)(g.a.isEnabled("feature-python-shell")?[l]:[]),Object(it.a)(g.a.isEnabled("feature-gluestudio-notebook")?[s]:[]),Object(it.a)(g.a.isEnabled("feature-manta")?[c]:[])),b=Object(T.useMessages)(Ta);return Object(P.jsx)(k.a,{header:Object(P.jsx)(u.a,{actions:Object(P.jsx)(p.default,{direction:"horizontal",size:"s",children:t}),info:Object(P.jsx)(f.a,{id:"new.job.create.title.linkAriaLabel",defaultMessage:"More information for 'Create job' (shows in sidebar).",description:"Info panel link aria label for the title of new job creation widget.",children:function(e){return Object(P.jsx)(h.a,{contentKey:"manage-jobs-hp-select-source-target",linkAriaLabel:e})}}),children:Object(P.jsx)(f.a,{id:"new.job.create.title",defaultMessage:"Create job",description:"Title for new job creation widget"})}),children:Object(P.jsxs)(p.default,{size:"xxl",children:[!g.a.isEnabled("feature-script-upload")&&Object(P.jsxs)(P.Fragment,{children:[Object(P.jsx)(ua.default,{"aria-owns":"source-target-selectors",items:[{value:"blank",label:"Blank graph",description:"Begin a job with an empty canvas."},{value:"source_and_target",label:"Source and target added to the graph",description:"Begin a job with source, ApplyMapping transform, and target.",controlId:"source_and_target"}],onChange:function(e){return a(e.detail.value)},value:o,id:"FullJobOptions.radio"}),Object(P.jsx)("div",{id:"source-target-selectors",role:"region","aria-live":"polite",children:"source_and_target"===o?Object(P.jsx)(Ca,Object(nt.a)({},n)):null})]}),Object(P.jsx)(zt.a,{ariaLabel:b.tilesAriaLabel,onChange:function(e){var t=e.detail.value;return a(t)},value:o,items:d}),"source_and_target"===o&&Object(P.jsx)(Ca,Object(nt.a)({},n)),("code_editor"===o||"python_shell"===o||"glue_ray"===o)&&Object(P.jsx)(ba,Object(nt.a)({},n)),"notebook"===o&&Object(P.jsx)(fa,Object(nt.a)({},n))]})})},La=function(){var e=Object(O.h)(),t=Object(Ue.a)(),a=Object(b.useContext)(ct.a),o=function(){var e=Object(b.useState)(Ma),t=Object(j.a)(e,2),a=t[0],o=t[1],n=Object(O.h)();return Object(b.useEffect)((function(){return n.listen((function(e){var t=e.search;try{var a=new URLSearchParams(t.substring(1)).get("selectedInterface")||void 0;a&&_a[a]&&o(_a[a])}catch(n){}}))}),[n]),[a,o]}(),n=Object(j.a)(o,2),i=n[0],r=n[1],l=Object(ea.b)().setNavigationOpen,s=Object(b.useState)("blank-editor"),c=Object(j.a)(s,2),d=c[0],u=c[1],p=a.userScript,m=a.setUserScript,h="python_shell"===i?"pythonShell":"spark",g=Object(b.useState)([{nodeType:"S3",id:"S3"},{nodeType:"S3",id:"S3"}]),y=Object(j.a)(g,2),v=y[0],k=y[1],_=Object(b.useMemo)((function(){return"blank"===i?"/editor/blank":"code_editor"===i&&"blank-editor"===d?"/editor/dagless/blank/jobType/spark/script":"code_editor"===i&&"upload-script"===d?"/editor/dagless/upload/jobType/spark/script":"python_shell"===i&&"blank-editor"===d?"/editor/dagless/blank/jobType/pythonShell/script":"python_shell"===i&&"upload-script"===d?"/editor/dagless/upload/jobType/pythonShell/script":"glue_ray"===i&&"blank-editor"===d?"/editor/dagless/blank/jobType/glueray/script":"glue_ray"===i&&"upload-script"===d?"/editor/dagless/upload/jobType/glueray/script":"Connector"===v[0].nodeType&&"Connector"===v[1].nodeType?Object(O.f)(pa.b.sourceAndSinkConnectors,{connectorSourceName:v[0].id,connectionType:v[0].connectorType,connectorSinkName:v[1].id,connectionSinkType:v[1].connectorType,tabId:"graph"}):"Connector"===v[0].nodeType?"/editor/template/connector/".concat(v[0].id,"/type/").concat(null!==(e=v[0].connectorType)&&void 0!==e?e:"","/sink/").concat(v[1].id,"/graph"):"Connector"===v[1].nodeType?Object(O.f)(pa.b.sinkOnlyConnectors,{source:v[0].id,connectorSinkName:v[1].id,connectionSinkType:v[1].connectorType,tabId:"graph"}):"notebook"===i?"/notebook/jupyter":"/editor/template/source/".concat(v[0].id,"/sink/").concat(v[1].id,"/graph");var e}),[v,i,d]);return Object(b.useEffect)((function(){("code_editor"!==i&&"python_shell"!==i&&"glue_ray"!==i||"blank-editor"===d)&&m(void 0)}),[i,d,m]),Object(P.jsx)(Ea,{source:v[0],sink:v[1],jobMode:i,codeEditorMode:d,scriptType:h,createButton:Object(P.jsx)(x.default,{id:"glue__job-create-btn",ariaLabel:t.formatMessage({id:"new.job.option.create.button.aria.label",defaultMessage:"Create a new Glue Studio job.",description:"Aria label for the create job button."}),variant:"primary",formAction:"submit",disabled:("code_editor"===i||"python_shell"===i||"notebook"===i||"glue_ray"===i)&&"upload-script"===d&&"string"!==typeof(null===p||void 0===p?void 0:p.content),onClick:function(){l(!1),e.push(_)},children:Object(P.jsx)(f.a,{id:"new.job.option.create.button",description:"Description for create job button.",defaultMessage:"Create"})}),onSinkChange:function(e){return k((function(t){return[t[0],e]}))},onSourceChange:function(e){return k((function(t){return[e,t[1]]}))},onJobModeChange:function(e){return r(e)},onCodeEditorModeChange:function(e){return u(e)},onScriptChange:function(e){var t=e.detail.file;return m(t)}})},Pa=function(){return g.a.isEnabled("feature-simplified-job-options")?Object(P.jsx)(oa,{}):Object(P.jsx)(La,{})},Ra=a(1211),Na=a(897),Da=a(14);t.default=function(){var e=Object(Na.a)(),t=e.jobs,a=e.isLoading,o=e.isFetching,n=Object(m.a)(!0).pushNotification,i=Da.i?"0.9 or 1.0":"0.9, 1.0, or 2.0";return Object(b.useEffect)((function(){if(!a&&!o){var e=t.some((function(e){var t;return"0.9"===e.GlueVersion&&"pythonshell"!==(null===(t=e.Command)||void 0===t?void 0:t.Name)})),r=t.some((function(e){var t;return"1.0"===e.GlueVersion&&"pythonshell"!==(null===(t=e.Command)||void 0===t?void 0:t.Name)}));(t.some((function(e){var t;return"2.0"===e.GlueVersion&&"pythonshell"!==(null===(t=e.Command)||void 0===t?void 0:t.Name)}))||r||e)&&n({type:"warning",content:Object(P.jsx)(p.default,{size:"xs",direction:"vertical",children:Object(P.jsx)(f.a,{id:"jobs.deprecate.notification.flashbar.content",description:"Content for glue versions 0.9, 1.0, 2.0 deprecation notification",defaultMessage:Object(T.processAwsString)("We detected some of your jobs are running on AWS Glue versions ".concat(i,". These versions have reached end of support. Please migrate your jobs to the latest version."))})}),dismissLabel:"Dismiss"})}}),[a,o]),Object(P.jsx)(d.a,{header:Object(P.jsx)(u.a,{variant:"h1",info:Object(P.jsx)(f.a,{id:"jobs.list.pageTitle.linkAriaLabel",defaultMessage:"More information for 'Manage jobs' (shows in sidebar).",description:"Info panel link aria label for the title of the page for jobs operations.",children:function(e){return Object(P.jsx)(h.a,{contentKey:"manage-jobs-hp",linkAriaLabel:e})}}),children:Object(P.jsx)(f.a,{id:"jobs.list.pageTitle",defaultMessage:"Manage jobs",description:"Title of the page for jobs operations."})}),children:Object(P.jsxs)(p.default,{size:"xxl",children:[Object(P.jsx)(Pa,{}),Object(P.jsx)(Ra.a,{options:{filter:function(e){return e}}})]})})}}}]);
//# sourceMappingURL=JobsList.js.map